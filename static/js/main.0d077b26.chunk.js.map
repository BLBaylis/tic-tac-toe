{"version":3,"sources":["routes/Game/GameSquare/GameSquare.module.scss","routes/IconSelectScreen/IconSelect/IconEditor/IconEditor.module.scss","routes/IconSelectScreen/Flipper/Flipper.module.scss","routes/Game/IconPreview/IconPreview.module.scss","routes/IconSelectScreen/IconSelect/IconSelect.module.scss","routes/IconSelectScreen/IconSelect/IconSelectNav/IconSelectNav.module.scss","gameFunctions/helperFunctions/helperFunctions.js","gameFunctions/generateAllIndexLines/generateAllIndexLines.js","gameFunctions/getGameResult/getGameResult.js","gameFunctions/simulateMove/simulateMove.js","reducers.js","gameFunctions/calculateCompMove/calculateCompMoveFunctions/determineWhichPlayerHasTempo/determineWhichPlayerHasTempo.js","gameFunctions/calculateCompMove/calculateCompMoveFunctions/getBestLines/getBestLines.js","gameFunctions/calculateCompMove/calculateCompMoveFunctions/getBestMoves/getBestMoves.js","gameFunctions/calculateCompMove/calculateCompMove.js","actions.js","constants.js","components/Icon/SvgComponents/Button.js","components/Icon/SvgComponents/CandyCane.js","components/Icon/SvgComponents/Circle.js","components/Icon/SvgComponents/Cross.js","components/Icon/SvgComponents/Pencils.js","components/Icon/SvgComponents/Smiley.js","components/Icon/SvgComponents/Swords.js","components/Icon/SvgComponents/Wheel.js","components/Icon/SvgIcon/SvgIcon.js","components/Icon/Icon.js","routes/GameModeSelect/GameModeCard.js","routes/GameModeSelect/CoverTransition.js","routes/GameModeSelect/GameModeSelect.js","components/IconButton/IconButton.js","routes/Game/IconPreview/IconPreview.js","routes/Game/Grid/Grid.js","routes/Game/Controls/ControlsButton/ControlsButton.js","routes/Game/Controls/Controls.js","routes/Game/GameSquare/GameSquare.js","gameFunctions/testing/simulateGame.js","gameFunctions/testing/recordGameResults.js","routes/Game/Game.js","routes/IconSelectScreen/Flipper/Flipper.js","routes/IconSelectScreen/IconSelect/Paintbrush.js","routes/IconSelectScreen/IconSelect/IconEditor/IconEditor.js","routes/IconSelectScreen/IconSelect/IconShowcase/IconShowcase.js","routes/IconSelectScreen/IconSelect/IconSelectNav/IconSelectNav.js","routes/IconSelectScreen/IconSelect/IconSelect.js","routes/IconSelectScreen/IconSelectScreen.js","routes/Settings/AppBar/AppBar.js","routes/Settings/Form/RadioButtonsGroupRow.js","routes/Settings/Form/Form.js","routes/Settings/Settings.js","TictactoeApp/TictactoeApp.js","index.js","routes/IconSelectScreen/IconSelect/IconShowcase/IconShowcase.module.scss","routes/Game/Grid/Grid.module.scss","routes/Game/Controls/Controls.module.scss","routes/Game/Game.module.scss","TictactoeApp/TictactoeApp.module.scss"],"names":["module","exports","gameSquare","reactCSSTransitionGroup","iconEditor","canvas","canvasInner","palette","paintIcon","paintImg","flipperContainer","flipper","front","back","flipped","icon","highlight","iconPreviewWrapper","iconSelectWrapper","iconSelect","heading","button","userConfirmButton","compConfirmButton","backButton","arrow","buttonRow","generateIndexArr","length","Array","fill","map","curr","index","findAllIndicesWithSquareValue","line","squareValue","gameBoard","filter","squareIndex","countOccurancesOfSquareValueInArr","flattenArr","arr","reduce","total","concat","chooseRandomElementFromArr","Math","floor","random","generateColumns","lineLength","x","generateColumnFromColNum","colNum","generateRows","generateRowFromRowNum","rowNum","generateDiagonals","generateAllIndexLines","getGameResult","gridSize","turnNo","winningLines","pow","checkMoveIsValid","squareNumber","prevState","outcome","trimGameLog","gameLog","slice","updateGameBoard","userTurn","Object","toConsumableArray","getNonGameLogState","simulateMove","nonGameLogState","objectSpread","initialGameState","firstMove","gameMode","initialIconState","userIcon","userIconType","userIconColour","compIcon","undefined","compIconType","compIconColour","changeTurn","turnsToMove","direction","stateChanges","processKeyPairs","player","iconChanges","keyPairsArr","entries","capitalisedKeysArr","capitaliseKeyNames","addTextToFrontOfKeys","keyPair","defineProperty","newObj","keyObj","assign","keyPairs","charAt","toUpperCase","text","determineWhichPlayerHasTempo","bestCompLines","bestUserLines","compLineLengths","bestCompLineLength","max","apply","userLineLengths","getWinnableLines","lines","every","getBestLineLength","lineLengths","getBestLines","winnableLines","bestLineLength","getEmptySquareIndicesNoDupes","flattenedArr","element","indexOf","removeDupes","getBestMoves","tempoPlayerLines","nonTempoPlayerLines","tempoPlayerMoveChoices","nonTempoPlayerLinesSquaresWithDupes","nonTempoPlayerLinesDisruptedByEachTempoPlayerMove","moveChoice","maxNonTempoPlayerLinesDisrupted","bestMoves","checkForOppositeCornersEdgeCase","calculateCompMove","centerIndex","tempoPlayer","gameBoardIndices","findAllEmptySquareIndicesOnGameBoard","makeMove","type","payload","restartGame","Number","restartGameThenCompMove","dispatch","getState","_getState$gameStateRe2","gameStateReducer","compMove","Button","_ref","colour","react_default","a","createElement","transform","id","style","stroke","strokeWidth","d","CandyCane","Circle","fillOpacity","cy","cx","r","Cross","Pencils","y","width","height","paintOrder","Smiley","rx","ry","Swords","Wheel","withStyles","root","padding","bgColour","children","classes","className","index_es","backgroundColor","bgColourCalculator","hex","hsl","Icon","_ref$bgColour","Fragment","Icon_SvgIcon_SvgIcon","SvgComponents_Button","SvgComponents_CandyCane","SvgComponents_Circle","SvgComponents_Cross","SvgComponents_Pencils","SvgComponents_Smiley","SvgComponents_Swords","SvgComponents_Wheel","card","display","flexDirection","justifyContent","alignItems","maxWidth","maxHeight","position","top","left","changeHoverState","onClick","label","raised","size","color","variant","onMouseOver","onMouseLeave","getAllDirectionStyles","_ref3","right","bottom","theme","wrapper","overflow","cover","pointerEvents","primary","main","secondary","hovered","vertDirection","noHover","useMediaQuery","GameModeSelect","state","vscompHovered","pvpHovered","buttonType","status","hoverType","_this","setState","handleClick","props","changeGameMode","changeRoute","_this2","this","_this$state","coverTransitionWrapper","GameModeSelect_CoverTransition","GameModeSelect_GameModeCard","compButton","newHoverState","icons_index_es","svg","pvpButton","components_Icon_Icon","Component","@media (orientation:landscape)","float","connect","buttonBase","boxShadow","&:hover","zIndex","disabled","IconPreview","iconInfo","toggleIconSelectFlipped","styles","components_IconButton_IconButton","Grid","generateSquares","isDraw","player1","player2","gridClassName","LandscapeButton","margin","newClassName","ControlsButton","Controls","clickHandlersObj","undoTurn","redoTurn","controls","Controls_ControlsButton_ControlsButton","marginTop","settingsBtn","marginBottom","GameSquare","value","keyProp","aria-label","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","key","simulateRandomMove","board","chosenMove","simulateGame","movesTaken","initialState","maxMoves","recordGameResults","result","counters","userWinsLog","noOutcomeLog","randomGamesLog","makeGameLogEasierToRead","push","userCounter","compCounter","drawCounter","noOutcome","includes","Game","_this$props$gameState","gameState","makeUserMoveThenCompMove","makeUserMove","_this$props$gameState2","Game_GameSquare_GameSquare","test","amountOfGames","_this$props$gameState3","gamesPlayed","console","log","_this$props","changeToRecordedTurn","_this$props$gameState4","gameScreenWrapper","gameScreen","Game_IconPreview_IconPreview","Game_Grid_Grid","Game_Controls_Controls","iconInfoReducer","_getState$gameStateRe","compMoveChoices","Flipper","flippedStyles","Paintbrush","viewBox","getBgColour","IconEditor","updateIconInfo","userBackface","compBackface","onChange","e","target","tabIndex","IconSelect_Paintbrush","IconShowcaseBtn","_ref2","iconType","iconShowcaseBtnDisabled","iconShowcaseBtn","IconShowcase","oppositionIconType","isPlayer2","isUserBackface","isCompBackface","iconShowcase","IconShowcase_IconShowcaseBtn","IconSelectNav","iconSelectFuncs","typography","fontSize","@media (orientation: landscape) and (min-width: 600px)","otherPlayer","selectedPlayer","IconSelect_IconEditor_IconEditor","newColour","iconColour","IconSelect_IconShowcase_IconShowcase","newIcon","newIconType","IconSelect_IconSelectNav_IconSelectNav","iconSelectFlipped","iconSelectFlippedToggleReducer","iconChangesObj","IconSelectScreen_Flipper_Flipper","IconSelectScreen_IconSelect_IconSelect","flexGrow","appBar","AppBar_default","Toolbar_default","Typography_default","formControl","spacing","unit","group","fieldSetPublic","fieldSetPrivate","currentFieldSetValue","formControlLabelInfo","handleChange","component","focused","row","name","labelInfo","control","Form","fieldName","event","handleSubmit","preventDefault","getData","dataType","String","formClassName","form","onSubmit","Form_RadioButtonsGroupRow","alignSelf","light","_state$gameStateReduc","grid","formMobile","query700px","AppBar_AppBar","container","justify","Settings_Form_Form","TictactoeApp","route","app","appBody","routes_GameModeSelect_GameModeSelect","routes_IconSelectScreen_IconSelectScreen","routes_Game_Game","routes_Settings_Settings","createMuiTheme","dark","contrastText","fontFamily","join","overrides","MuiFormLabel","&$focused","reducers","combineReducers","arguments","action","_action$payload","_action$payload2","newState","_action$payload3","logger","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_TictactoeApp_TictactoeApp","document","getElementById","grid-3","grid-5","grid-7"],"mappings":"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","file":"static/js/main.0d077b26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameSquare\":\"GameSquare_gameSquare__2MGeH\",\"reactCSSTransitionGroup\":\"GameSquare_reactCSSTransitionGroup__3_1C3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconEditor\":\"IconEditor_iconEditor__AW7l3\",\"canvas\":\"IconEditor_canvas__35Ulr\",\"canvasInner\":\"IconEditor_canvasInner__2hzyO\",\"palette\":\"IconEditor_palette__1gjDc\",\"paintIcon\":\"IconEditor_paintIcon__13Pfj\",\"paintImg\":\"IconEditor_paintImg__1FgTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flipperContainer\":\"Flipper_flipperContainer__3NODJ\",\"flipper\":\"Flipper_flipper__16b3O\",\"front\":\"Flipper_front__319Nb\",\"back\":\"Flipper_back__2okc5\",\"flipped\":\"Flipper_flipped__1wM6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"IconPreview_icon__1qhh5\",\"highlight\":\"IconPreview_highlight__2q-dM\",\"iconPreviewWrapper\":\"IconPreview_iconPreviewWrapper__1a1SO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconSelectWrapper\":\"IconSelect_iconSelectWrapper__2Jyhl\",\"iconSelect\":\"IconSelect_iconSelect__2n2xL\",\"heading\":\"IconSelect_heading__2Qc6l\",\"highlight\":\"IconSelect_highlight__hLKqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"IconSelectNav_button__1ImlD\",\"userConfirmButton\":\"IconSelectNav_userConfirmButton__3qQcO\",\"compConfirmButton\":\"IconSelectNav_compConfirmButton__3ql3A\",\"backButton\":\"IconSelectNav_backButton__2WFxj\",\"arrow\":\"IconSelectNav_arrow__2sxgy\",\"buttonRow\":\"IconSelectNav_buttonRow__24tft\"};","export const findAllEmptySquareIndicesOnGameBoard = gameBoard => {\r\n  const gameBoardIndices = generateIndexArr(gameBoard.length);\r\n  return findAllIndicesWithSquareValue(gameBoardIndices, null, gameBoard);\r\n};\r\n\r\nexport const generateIndexArr = length =>\r\n  Array(length)\r\n    .fill()\r\n    .map((curr, index) => index);\r\n\r\n//findAllIndicesWithSquareValue([0, 1, 2], \"user\", [null, null, \"user\"]) returns [2]\r\nexport const findAllIndicesWithSquareValue = (line, squareValue, gameBoard) => {\r\n  return line.filter(squareIndex => gameBoard[squareIndex] === squareValue);\r\n};\r\n\r\n//countOccurancesOfSquareValueInArr([0, 1, 2], \"user\", [null, null, \"user\"]) returns 1\r\nexport const countOccurancesOfSquareValueInArr = (\r\n  line,\r\n  squareValue,\r\n  gameBoard\r\n) => findAllIndicesWithSquareValue(line, squareValue, gameBoard).length;\r\n\r\nexport const flattenArr = arr =>\r\n  arr.reduce((total, curr) => total.concat(curr), []);\r\n\r\nexport const removeDupes = arr =>\r\n  arr.filter((element, index) => arr.indexOf(element) === index);\r\n\r\nexport const countOccurancesOfElementInArr = (element, arr) =>\r\n  arr.filter(curr => curr === element).length;\r\n\r\nexport const chooseRandomElementFromArr = arr => {\r\n  if (!arr.length) {\r\n    return false;\r\n  }\r\n  let randomIndex = Math.floor(Math.random() * arr.length);\r\n  return arr[randomIndex];\r\n};\r\n","import { generateIndexArr } from \"../helperFunctions/helperFunctions\";\r\n\r\n//generateAllLines is used to generate all potential winning IndexLines in a\r\n//grid for the board to be cross-checked against.\r\n//\r\n// lineLength 3 grid =\r\n// _____________\r\n// |_0_|_1_|_2_|\r\n// |_3_|_4_|_5_|\r\n// |_6_|_7_|_8_|\r\n//\r\n//E.g generateAllIndexLines(3) = [\r\n//  [0, 1, 2],\r\n//  [3, 4, 5],\r\n//  [6, 7, 8],\r\n//  [0, 3, 6],\r\n//  [1, 4, 7],\r\n//  [2, 5, 8],\r\n//  [0, 4 ,8],\r\n//  [2, 4, 6]\r\n//]\r\n\r\nconst generateAllIndexLines = lineLength => {\r\n  return [].concat(\r\n    generateColumns(lineLength),\r\n    generateRows(lineLength),\r\n    generateDiagonals(lineLength)\r\n  );\r\n};\r\n\r\nconst generateColumns = lineLength => {\r\n  const colNo = generateIndexArr(lineLength);\r\n  return colNo.map(x => generateColumnFromColNum(x, lineLength));\r\n};\r\n\r\nconst generateColumnFromColNum = (colNum, lineLength) => {\r\n  return Array(lineLength)\r\n    .fill()\r\n    .map((x, index) => colNum + index * lineLength);\r\n};\r\n\r\nconst generateRows = lineLength => {\r\n  const rowNo = generateIndexArr(lineLength);\r\n  return rowNo.map(x => generateRowFromRowNum(x, lineLength));\r\n};\r\n\r\nconst generateRowFromRowNum = (rowNum, lineLength) => {\r\n  return Array(lineLength)\r\n    .fill()\r\n    .map((x, index) => rowNum * lineLength + index);\r\n};\r\n\r\nconst generateDiagonals = lineLength => {\r\n  const diag1 = Array(lineLength)\r\n    .fill()\r\n    .map((x, index) => index * lineLength + index);\r\n  const diag2 = Array(lineLength)\r\n    .fill()\r\n    .map((x, index) => (index + 1) * lineLength - (index + 1));\r\n  return [diag1, diag2];\r\n};\r\n\r\nexport default generateAllIndexLines;\r\n","import generateAllIndexLines from \"../generateAllIndexLines/generateAllIndexLines\";\r\nimport { countOccurancesOfSquareValueInArr } from \"../helperFunctions/helperFunctions\";\r\n\r\n//getGameResult\r\n//arguments:\r\n//  gridSize is the length of a grid line, where a gridSize 3 grid equals\r\n//  ___________\r\n// |_0_|_1_|_2_|\r\n// |_3_|_4_|_5_|\r\n// |_6_|_7_|_8_|\r\n//\r\n//  gameBoard is an arr where each index maps to the equivalent grid square\r\n//  index, but contains the value in the square instead of the the square index\r\n//  itself\r\n//\r\n//  turnNo is self-explainatory\r\n//\r\n// getGameResult determines if there is a winner and return that winner if that\r\n// is the case.  Returns 'draw' for a draw and null if the game isn't finished.\r\n\r\nexport const getGameResult = (gameBoard, gridSize, turnNo) => {\r\n  const allLines = generateAllIndexLines(gridSize);\r\n  const noEmptySquareLines = allLines.filter(\r\n    line => countOccurancesOfSquareValueInArr(line, null, gameBoard) === 0\r\n  );\r\n  const winningLines = noEmptySquareLines.filter(\r\n    line =>\r\n      countOccurancesOfSquareValueInArr(line, gameBoard[line[0]], gameBoard) ===\r\n      line.length\r\n  );\r\n  if (winningLines.length) {\r\n    return gameBoard[winningLines[0][0]];\r\n  } else if (turnNo >= gridSize ** 2) {\r\n    return \"draw\";\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default getGameResult;\r\n","import getGameResult from \"../getGameResult/getGameResult\";\r\n\r\n//creates new state for the move just taken\r\n\r\nconst simulateMove = (squareNumber, prevState) => {\r\n  const { gridSize, turnNo, userTurn } = prevState;\r\n  if (!checkMoveIsValid(squareNumber, prevState)) {\r\n    return prevState;\r\n  }\r\n  const gameLog = trimGameLog(prevState);\r\n  const gameBoard = updateGameBoard(squareNumber, prevState);\r\n  const outcome = getGameResult(gameBoard, gridSize, turnNo + 1);\r\n  const nonGameLogState = getNonGameLogState(\r\n    gameBoard,\r\n    turnNo,\r\n    userTurn,\r\n    outcome\r\n  );\r\n  return {\r\n    ...prevState,\r\n    gameLog: gameLog.concat(nonGameLogState),\r\n    ...nonGameLogState\r\n  };\r\n};\r\n\r\nexport const checkMoveIsValid = (squareNumber, prevState) => {\r\n  const { gameBoard, outcome } = prevState;\r\n  return gameBoard[squareNumber] || outcome !== null ? false : true;\r\n};\r\n\r\nexport const trimGameLog = prevState => {\r\n  const { gameLog, turnNo } = prevState;\r\n  return gameLog[turnNo + 1] ? gameLog.slice(0, turnNo + 1) : gameLog;\r\n};\r\n\r\nexport const updateGameBoard = (squareNumber, prevState) => {\r\n  const { gameBoard, userTurn } = prevState;\r\n  return [\r\n    ...gameBoard.slice(0, squareNumber),\r\n    userTurn ? \"user\" : \"comp\",\r\n    ...gameBoard.slice(squareNumber + 1)\r\n  ];\r\n};\r\n\r\nexport const getNonGameLogState = (gameBoard, turnNo, userTurn, outcome) => {\r\n  return { gameBoard, userTurn: !userTurn, outcome, turnNo: turnNo + 1 };\r\n};\r\n\r\nexport default simulateMove;\r\n","import {\r\n  MAKE_MOVE,\r\n  RESTART_GAME,\r\n  CHANGE_GAME_MODE,\r\n  TOGGLE_ICON_SELECT_FLIPPED,\r\n  UPDATE_ICON_INFO,\r\n  CHANGE_TO_RECORDED_TURN\r\n} from \"./constants.js\";\r\nimport simulateMove from \"./gameFunctions/simulateMove/simulateMove\";\r\n\r\nconst initialGameState = {\r\n  gameBoard: Array(9).fill(null),\r\n  gameLog: [\r\n    {\r\n      gameBoard: Array(9).fill(null),\r\n      turnNo: 0,\r\n      userTurn: true,\r\n      outcome: null\r\n    }\r\n  ],\r\n  turnNo: 0,\r\n  userTurn: true,\r\n  outcome: null,\r\n  gridSize: 3,\r\n  firstMove: \"user\",\r\n  gameMode: \"vsComp\"\r\n};\r\n\r\nconst initialIconState = {\r\n  userIcon: \"circle\",\r\n  userIconType: \"nought\",\r\n  userIconColour: \"#22b14c\",\r\n  compIcon: undefined,\r\n  compIconType: undefined,\r\n  compIconColour: \"#ed261a\"\r\n};\r\n\r\nexport const gameStateReducer = (state = initialGameState, action = {}) => {\r\n  switch (action.type) {\r\n    case MAKE_MOVE:\r\n      return simulateMove(action.payload, state);\r\n    case RESTART_GAME:\r\n      const { firstMove, gridSize, gameMode } = action.payload;\r\n      return {\r\n        ...initialGameState,\r\n        firstMove,\r\n        gridSize,\r\n        gameMode,\r\n        userTurn: firstMove === \"user\",\r\n        gameBoard: Array(gridSize ** 2).fill(null),\r\n        gameLog: [\r\n          {\r\n            gameBoard: Array(gridSize ** 2).fill(null),\r\n            turnNo: 0,\r\n            userTurn: firstMove === \"user\",\r\n            outcome: null\r\n          }\r\n        ]\r\n      };\r\n    case CHANGE_GAME_MODE:\r\n      return { ...state, gameMode: action.payload };\r\n    case CHANGE_TO_RECORDED_TURN:\r\n      const { turnsToMove, direction } = action.payload;\r\n      let newState = changeTurn(turnsToMove, direction, state);\r\n      if (newState) {\r\n        return newState;\r\n      }\r\n      newState = changeTurn(1, direction, state);\r\n      return newState ? newState : state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const iconSelectFlippedToggleReducer = (\r\n  state = { iconSelectFlipped: false },\r\n  action = {}\r\n) => {\r\n  if (action.type === TOGGLE_ICON_SELECT_FLIPPED) {\r\n    return { ...state, iconSelectFlipped: !state.iconSelectFlipped };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport const iconInfoReducer = (state = initialIconState, action = {}) => {\r\n  if (action.type === UPDATE_ICON_INFO) {\r\n    const { player, iconChanges } = action.payload;\r\n    const stateChanges = processKeyPairs(player, iconChanges);\r\n    if (player === \"user\" && stateChanges.userIconType !== state.userIconType) {\r\n      stateChanges.compIcon = undefined;\r\n    }\r\n    return { ...state, ...stateChanges };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst changeTurn = (turnsToMove, direction, prevState) => {\r\n  const { gameMode, gameLog, turnNo, firstMove } = prevState;\r\n  const newTurnNumber =\r\n    direction === \"back\" ? turnNo - turnsToMove : turnNo + turnsToMove;\r\n  const stateChanges = gameLog[newTurnNumber];\r\n  if (!stateChanges) return false;\r\n  if (!stateChanges.userTurn && turnsToMove === 2) return false;\r\n  if (!stateChanges.turnNo && firstMove === \"comp\" && gameMode !== \"pvp\") {\r\n    return false;\r\n  }\r\n  return {\r\n    ...prevState,\r\n    ...stateChanges,\r\n    gameBoard: stateChanges.gameBoard.slice(),\r\n    gameLog: [...prevState.gameLog]\r\n  };\r\n};\r\n\r\nconst processKeyPairs = (player, iconChanges) => {\r\n  const keyPairsArr = Object.entries(iconChanges);\r\n  const capitalisedKeysArr = capitaliseKeyNames(keyPairsArr);\r\n  const textAddedToKeysArr = addTextToFrontOfKeys(capitalisedKeysArr, player);\r\n  const keyPairObjsArr = textAddedToKeysArr.map(keyPair => ({\r\n    [keyPair[0]]: keyPair[1]\r\n  }));\r\n  return keyPairObjsArr.reduce((newObj, keyObj) => {\r\n    return Object.assign(newObj, keyObj);\r\n  }, {});\r\n};\r\n\r\nconst capitaliseKeyNames = keyPairs =>\r\n  keyPairs.map(keyPair => [\r\n    keyPair[0].charAt(0).toUpperCase() + keyPair[0].slice(1),\r\n    keyPair[1]\r\n  ]);\r\n\r\nconst addTextToFrontOfKeys = (keyPairs, text) =>\r\n  keyPairs.map(keyPair => [`${text}${keyPair[0]}`, keyPair[1]]);\r\n","import { countOccurancesOfSquareValueInArr } from \"../../../helperFunctions/helperFunctions\";\r\n\r\nconst determineWhichPlayerHasTempo = (\r\n  bestCompLines,\r\n  bestUserLines,\r\n  gameBoard\r\n) => {\r\n  const compLineLengths = bestCompLines.map(line =>\r\n    countOccurancesOfSquareValueInArr(line, \"comp\", gameBoard)\r\n  );\r\n  const bestCompLineLength = Math.max(...compLineLengths);\r\n  const userLineLengths = bestUserLines.map(line =>\r\n    countOccurancesOfSquareValueInArr(line, \"user\", gameBoard)\r\n  );\r\n  const bestUserLineLength = Math.max(...userLineLengths);\r\n  return bestCompLineLength >= bestUserLineLength ? \"comp\" : \"user\";\r\n};\r\n\r\nexport default determineWhichPlayerHasTempo;\r\n","import generateAllIndexLines from \"../../../generateAllIndexLines/generateAllIndexLines\";\r\nimport { countOccurancesOfSquareValueInArr } from \"../../../helperFunctions/helperFunctions\";\r\n\r\nconst getBestLines = (player, gameBoard) => {\r\n  const winnableLines = getWinnableLines(\r\n    generateAllIndexLines(gameBoard.length ** (1 / 2)),\r\n    player,\r\n    gameBoard\r\n  );\r\n  const bestLineLength = getBestLineLength(winnableLines, player, gameBoard);\r\n  return winnableLines.filter(\r\n    line =>\r\n      countOccurancesOfSquareValueInArr(line, player, gameBoard) ===\r\n      bestLineLength\r\n  );\r\n};\r\n\r\nexport const getWinnableLines = (lines, player, gameBoard) => {\r\n  return lines.filter(line =>\r\n    line.every(\r\n      squareIndex =>\r\n        gameBoard[squareIndex] === null || gameBoard[squareIndex] === player\r\n    )\r\n  );\r\n};\r\n\r\nexport const getBestLineLength = (lines, player, gameBoard) => {\r\n  const lineLengths = lines.map(line =>\r\n    countOccurancesOfSquareValueInArr(line, player, gameBoard)\r\n  );\r\n  return Math.max(...lineLengths);\r\n};\r\n\r\nexport default getBestLines;\r\n","import {\r\n  findAllIndicesWithSquareValue,\r\n  flattenArr,\r\n  removeDupes,\r\n  countOccurancesOfElementInArr\r\n} from \"../../../helperFunctions/helperFunctions\";\r\n\r\n//Finds the best move for the tempoPlayer and takes it.  If tempoPlayer is comp\r\n//then it is simply making a move that moves it closer to victory.  If\r\n//tempoPlayer is user, then comp takes that move, denying it from the user.\r\n\r\nconst getBestMoves = (tempoPlayerLines, nonTempoPlayerLines, gameBoard) => {\r\n  const tempoPlayerMoveChoices = getEmptySquareIndicesNoDupes(\r\n    tempoPlayerLines,\r\n    gameBoard\r\n  );\r\n  const nonTempoPlayerLinesSquaresWithDupes = flattenArr(nonTempoPlayerLines);\r\n  const nonTempoPlayerLinesDisruptedByEachTempoPlayerMove = tempoPlayerMoveChoices.map(\r\n    moveChoice =>\r\n      countOccurancesOfElementInArr(\r\n        moveChoice,\r\n        nonTempoPlayerLinesSquaresWithDupes\r\n      )\r\n  );\r\n  const maxNonTempoPlayerLinesDisrupted = Math.max(\r\n    ...nonTempoPlayerLinesDisruptedByEachTempoPlayerMove\r\n  );\r\n  if (maxNonTempoPlayerLinesDisrupted < 1) {\r\n    return tempoPlayerMoveChoices;\r\n  }\r\n  const bestMoves = tempoPlayerMoveChoices.filter(\r\n    (moveChoice, index) =>\r\n      nonTempoPlayerLinesDisruptedByEachTempoPlayerMove[index] ===\r\n      maxNonTempoPlayerLinesDisrupted\r\n  );\r\n  if (bestMoves.length) {\r\n    return bestMoves;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getEmptySquareIndicesNoDupes = (arr, gameBoard) => {\r\n  const flattenedArr = flattenArr(arr);\r\n  const allEmptySquares = findAllIndicesWithSquareValue(\r\n    flattenedArr,\r\n    null,\r\n    gameBoard\r\n  );\r\n  return removeDupes(allEmptySquares);\r\n};\r\n\r\nexport default getBestMoves;\r\n","import determineWhichPlayerHasTempo from \"./calculateCompMoveFunctions/determineWhichPlayerHasTempo/determineWhichPlayerHasTempo\";\r\nimport getBestLines from \"./calculateCompMoveFunctions/getBestLines/getBestLines\";\r\nimport getBestMoves from \"./calculateCompMoveFunctions/getBestMoves/getBestMoves\";\r\nimport {\r\n  findAllEmptySquareIndicesOnGameBoard,\r\n  countOccurancesOfSquareValueInArr\r\n} from \"../helperFunctions/helperFunctions\";\r\n\r\nconst calculateCompMove = (gridSize, turnNo, gameBoard) => {\r\n  const centerIndex = (gridSize ** 2 - 1) / 2;\r\n  const centerValue = gameBoard[centerIndex];\r\n  if (!centerValue) {\r\n    return centerIndex;\r\n  }\r\n  //A edge case that was rare enough to not be worth solving programmatically\r\n  //and the solution is instead hardcoded\r\n  if (checkForOppositeCornersEdgeCase(gridSize, turnNo, gameBoard)) {\r\n    return [1, 3, 5, 7];\r\n  }\r\n  const bestCompLines = getBestLines(\"comp\", gameBoard);\r\n  const bestUserLines = getBestLines(\"user\", gameBoard);\r\n  //The player that has tempo is the one who is closest to completing a line\r\n  //without intervention from the other player.\r\n  const tempoPlayer = determineWhichPlayerHasTempo(\r\n    bestCompLines,\r\n    bestUserLines,\r\n    gameBoard\r\n  );\r\n  const tempoPlayerLines =\r\n    tempoPlayer === \"comp\" ? bestCompLines : bestUserLines;\r\n  if (!tempoPlayerLines.length) {\r\n    //there are no winnable lines so pick a random space\r\n    return findAllEmptySquareIndicesOnGameBoard(gameBoard);\r\n  }\r\n  const nonTempoPlayerLines =\r\n    tempoPlayer === \"comp\" ? bestUserLines : bestCompLines;\r\n  const bestMoves = getBestMoves(\r\n    tempoPlayerLines,\r\n    nonTempoPlayerLines,\r\n    gameBoard\r\n  );\r\n  if (bestMoves.length) {\r\n    return bestMoves.length === 1 ? bestMoves[0] : bestMoves;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const checkForOppositeCornersEdgeCase = (\r\n  gridSize,\r\n  turnNo,\r\n  gameBoard\r\n) => {\r\n  if (gridSize === 3 && turnNo === 3) {\r\n    if (\r\n      countOccurancesOfSquareValueInArr([0, 8], \"user\", gameBoard) === 2 ||\r\n      countOccurancesOfSquareValueInArr([2, 6], \"user\", gameBoard) === 2\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default calculateCompMove;\r\n","import {\r\n  MAKE_MOVE,\r\n  RESTART_GAME,\r\n  CHANGE_ROUTE,\r\n  CHANGE_TO_RECORDED_TURN,\r\n  TOGGLE_ICON_SELECT_FLIPPED,\r\n  UPDATE_ICON_INFO,\r\n  CHANGE_GAME_MODE\r\n} from \"./constants.js\";\r\nimport calculateCompMove from \"./gameFunctions/calculateCompMove/calculateCompMove\";\r\nimport { chooseRandomElementFromArr } from \"./gameFunctions/helperFunctions/helperFunctions\";\r\n\r\nexport const makeMove = squareNumber => ({\r\n  type: MAKE_MOVE,\r\n  payload: squareNumber\r\n});\r\n\r\nexport const makeUserMoveThenCompMove = squareNumber => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(makeMove(squareNumber));\r\n  const { gameBoard, gridSize, turnNo, outcome } = getState().gameStateReducer;\r\n  if (!outcome) {\r\n    const compMoveChoices = calculateCompMove(gridSize, turnNo, gameBoard);\r\n    const compMove =\r\n      typeof compMoveChoices === \"number\"\r\n        ? compMoveChoices\r\n        : chooseRandomElementFromArr(compMoveChoices);\r\n    dispatch(makeMove(compMove));\r\n  }\r\n};\r\n\r\nexport const restartGame = (gridSize, firstMove, gameMode) => {\r\n  return {\r\n    type: RESTART_GAME,\r\n    payload: { gridSize: Number(gridSize), firstMove, gameMode }\r\n  };\r\n};\r\n\r\nexport const restartGameThenCompMove = (gridSize, firstMove) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(restartGame(gridSize, firstMove, \"vsComp\"));\r\n  const { gameBoard, turnNo } = getState().gameStateReducer;\r\n  const compMove = calculateCompMove(gridSize, turnNo, gameBoard);\r\n  dispatch(makeMove(compMove));\r\n};\r\n\r\nexport const changeToRecordedTurn = (direction, turnsToMove) => ({\r\n  type: CHANGE_TO_RECORDED_TURN,\r\n  payload: { direction, turnsToMove }\r\n});\r\n\r\nexport const changeGameMode = gameMode => ({\r\n  type: CHANGE_GAME_MODE,\r\n  payload: gameMode\r\n});\r\n\r\nexport const toggleIconSelectFlipped = () => ({\r\n  type: TOGGLE_ICON_SELECT_FLIPPED\r\n});\r\n\r\nexport const updateIconInfo = (player, iconChanges) => ({\r\n  type: UPDATE_ICON_INFO,\r\n  payload: { player, iconChanges }\r\n});\r\n\r\nexport const changeRoute = newRoute => ({\r\n  type: CHANGE_ROUTE,\r\n  payload: newRoute\r\n});\r\n","export const MAKE_MOVE = \"MAKE_MOVE\";\r\nexport const CHANGE_GAME_MODE = \"CHANGE_GAME_MODE\";\r\nexport const RESTART_GAME = \"RESTART_GAME\";\r\nexport const CHANGE_ROUTE = \"CHANGE_ROUTE\";\r\nexport const CHANGE_TO_RECORDED_TURN = \"CHANGE_TO_RECORDED_TURN\";\r\nexport const TOGGLE_ICON_SELECT_OPEN = \"TOGGLE_ICON_SELECT_OPEN\";\r\nexport const TOGGLE_ICON_SELECT_FLIPPED = \"TOGGLE_ICON_SELECT_FLIPPED\";\r\nexport const UPDATE_ICON_INFO = \"UPDATE_ICON_INFO\";\r\n","import React from \"react\";\r\n\r\nconst Button = ({ colour }) => (\r\n  <g\r\n    transform=\"matrix(0.12000125,0,0,0.12000125,0.08316769,-6.189614)\"\r\n    id=\"g7283\"\r\n    style={{ fill: colour, stroke: \"#000\", strokeWidth: 5 }}\r\n  >\r\n    <path\r\n      transform=\"matrix(0.26458,0,0,0.26458,-0.69345,51.58)\"\r\n      d=\"M 377.81,9.2188 A 368.73,368.73 0 0 0 9.22,378.0488 368.73,368.73 0 0 0 378,746.6888 368.73,368.73 0 0 0 746.69,377.9588 v -0.1875 A 368.73,368.73 0 0 0 377.81,9.2213 Z m -135.9,118.29 a 92.155,94.517 0 0 1 93.809,82.291 l 0.13868,1.1504 a 92.155,94.517 0 0 1 -80.475,104.88 92.155,94.517 0 0 1 -102.51,-82.217 92.155,94.517 0 0 1 79.848,-105.38 92.155,94.517 0 0 1 9.1856,-0.7207 z m 276.46,0 a 92.155,94.517 0 0 1 93.809,82.291 l 0.13867,1.1504 a 92.155,94.517 0 0 1 -80.475,104.88 92.155,94.517 0 0 1 -102.5,-82.217 92.155,94.517 0 0 1 79.846,-105.38 92.155,94.517 0 0 1 9.1855,-0.7207 z m -276.46,283.55 a 92.155,94.517 0 0 1 93.809,82.289 l 0.13868,1.1504 a 92.155,94.517 0 0 1 -80.475,104.88 92.155,94.517 0 0 1 -102.51,-82.215 92.155,94.517 0 0 1 79.848,-105.38 92.155,94.517 0 0 1 9.1856,-0.71875 z m 276.46,0 a 92.155,94.517 0 0 1 93.809,82.289 l 0.13867,1.1504 a 92.155,94.517 0 0 1 -80.475,104.88 92.155,94.517 0 0 1 -102.5,-82.215 92.155,94.517 0 0 1 79.846,-105.38 92.155,94.517 0 0 1 9.1855,-0.71875 z\"\r\n      id=\"path7281\"\r\n    />\r\n  </g>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst CandyCane = ({ colour }) => (\r\n  <g\r\n    transform=\"matrix(0.11422335,0,0,0.11422335,-2.1030516,-8.7607125)\"\r\n    id=\"g8681\"\r\n    style={{ stroke: \"#000000\", fill: colour }}\r\n  >\r\n    <g\r\n      transform=\"matrix(1,0,0.3282,1,-55.562,0.90793)\"\r\n      id=\"g8629\"\r\n      style={{ fill: \"none\", strokeWidth: 2.68039989 }}\r\n    >\r\n      <path\r\n        d=\"m 153.41,107.52 c 0,0 26.051,-39.549 57.84,-25.472 31.788,14.077 1.7528,50.78 1.7528,50.78\"\r\n        id=\"path8615\"\r\n        style={{ strokeWidth: 5 }}\r\n      />\r\n      <path\r\n        d=\"m 203.35,125.64 12.436,6.3006\"\r\n        id=\"path8617\"\r\n        style={{ strokeWidth: 5 }}\r\n      />\r\n      <path\r\n        transform=\"matrix(1.3062,0,0,1.0019,-30.183,-3.2864)\"\r\n        d=\"M 45.085,277.68 144.396,103.99\"\r\n        id=\"path8619\"\r\n        style={{ strokeWidth: 4.37069988 }}\r\n      />\r\n      <g\r\n        transform=\"matrix(0.82516,0.14341,-0.16267,0.93598,62.379,-4.6464)\"\r\n        id=\"g8625\"\r\n        style={{ strokeWidth: 5.60540009 }}\r\n      >\r\n        <path d=\"M 29.023,303.21 144.393,103.98\" id=\"path8621\" />\r\n        <path\r\n          d=\"m 144.4,103.99 c 0,0 14.833,-33.624 41.866,-29.865 24.745,3.4407 9.1394,35.198 9.1394,35.198\"\r\n          id=\"path8623\"\r\n        />\r\n      </g>\r\n      <path\r\n        d=\"m 25.665,274.87 14.086,8.9217\"\r\n        id=\"path8627\"\r\n        style={{ strokeWidth: 5 }}\r\n      />\r\n    </g>\r\n    <path\r\n      d=\"m 70.854,262.57 7.5245,-18.241 2.8629,19.865 -6.9082,15.371 z\"\r\n      id=\"path8631\"\r\n    />\r\n    <path\r\n      d=\"m 84.16,233.53 7.5245,-18.241 2.8629,19.865 -6.9082,15.371 z\"\r\n      id=\"path8633\"\r\n    />\r\n    <path\r\n      d=\"m 97.581,199.16 7.0617,-18.125 3.4414,22.063 -6.9082,15.371 z\"\r\n      id=\"path8635\"\r\n    />\r\n    <path\r\n      d=\"m 109.96,170.01 7.0617,-18.125 3.4414,22.063 -6.9082,15.371 z\"\r\n      id=\"path8637\"\r\n    />\r\n    <path\r\n      d=\"m 126.04,133.33 7.0617,-18.125 2.5158,21.6 -5.9826,15.833 z\"\r\n      id=\"path8639\"\r\n    />\r\n    <path\r\n      d=\"m 138.15,102.98 c 0.79684,-7.0678 6.6876,-11.177 10.007,-15.916 l 3.6612,14.073 c -3.2364,5.722 -6.492,11.36 -9.0914,19.842 z\"\r\n      id=\"path8641\"\r\n    />\r\n    <path\r\n      d=\"m 178.71,83.014 c 8.352,0.93774 13.999,6.0522 18.619,9.7269 -1.8538,-1.3551 -11.513,-2.2433 -13.957,2.2984 -2.926,-3.9799 -18.313,-4.4598 -27.834,2.7154 5.1065,-6.7675 11.958,-14.081 23.172,-14.741 z\"\r\n      id=\"path8643\"\r\n    />\r\n    <path\r\n      d=\"m 192.51,105.47 c 13.768,2.314 13.074,7.1734 13.074,7.1734 l -1.2148,10.413 c 0,0 -4.1652,-3.6446 -11.107,-3.5867 0.45703,-6.9902 0.20128,-8.9292 -0.75206,-14 z\"\r\n      id=\"path8645\"\r\n      style={{ strokeWidth: 2.5 }}\r\n    />\r\n    <g\r\n      transform=\"matrix(-1,0,-0.3282,1,302.22,0.15137)\"\r\n      id=\"g8661\"\r\n      style={{ fill: \"none\", strokeWidth: 5 }}\r\n    >\r\n      <path\r\n        d=\"m 153.41,107.52 c 0,0 26.051,-39.549 57.84,-25.472 31.788,14.077 1.7528,50.78 1.7528,50.78\"\r\n        id=\"path8647\"\r\n      />\r\n      <path d=\"m 203.35,125.64 12.436,6.3006\" id=\"path8649\" />\r\n      <path\r\n        transform=\"matrix(1.3062,0,0,1.0019,-30.183,-3.2864)\"\r\n        d=\"M 45.085,277.68 144.396,103.99\"\r\n        id=\"path8651\"\r\n        style={{ strokeWidth: 4.37069988 }}\r\n      />\r\n      <g\r\n        transform=\"matrix(0.82516,0.14341,-0.16267,0.93598,62.379,-4.6464)\"\r\n        id=\"g8657\"\r\n        style={{ strokeWidth: 5.60540009 }}\r\n      >\r\n        <path d=\"M 29.023,303.21 144.393,103.98\" id=\"path8653\" />\r\n        <path\r\n          d=\"m 144.4,103.99 c 0,0 14.833,-33.624 41.866,-29.865 24.745,3.4407 9.1394,35.198 9.1394,35.198\"\r\n          id=\"path8655\"\r\n        />\r\n      </g>\r\n      <path d=\"m 25.665,274.87 14.086,8.9217\" id=\"path8659\" />\r\n    </g>\r\n    <g\r\n      transform=\"matrix(-1,0,0,1,246.66,-0.75656)\"\r\n      id=\"g8679\"\r\n      style={{ strokeWidth: 2.68039989 }}\r\n    >\r\n      <path\r\n        d=\"m 70.854,262.57 7.5245,-18.241 2.8629,19.865 -6.9082,15.371 z\"\r\n        id=\"path8663\"\r\n      />\r\n      <path\r\n        d=\"m 84.16,233.53 7.5245,-18.241 2.8629,19.865 -6.9082,15.371 z\"\r\n        id=\"path8665\"\r\n      />\r\n      <path\r\n        d=\"m 97.581,199.16 7.0617,-18.125 3.4414,22.063 -6.9082,15.371 z\"\r\n        id=\"path8667\"\r\n      />\r\n      <path\r\n        d=\"m 109.96,170.01 7.0617,-18.125 3.4414,22.063 -6.9082,15.371 z\"\r\n        id=\"path8669\"\r\n      />\r\n      <path\r\n        d=\"m 126.04,133.33 7.0617,-18.125 2.5158,21.6 -5.9826,15.833 z\"\r\n        id=\"path8671\"\r\n      />\r\n      <path\r\n        d=\"m 138.15,102.98 c 0.79684,-7.0678 6.6876,-11.177 10.007,-15.916 l 3.6612,14.073 c -3.2364,5.722 -6.492,11.36 -9.0914,19.842 z\"\r\n        id=\"path8673\"\r\n      />\r\n      <path\r\n        d=\"m 178.71,83.014 c 8.352,0.93774 13.999,6.0522 18.619,9.7269 -1.8538,-1.3551 -11.513,-2.2433 -13.957,2.2984 -2.926,-3.9799 -18.313,-4.4598 -27.834,2.7154 5.1065,-6.7675 11.958,-14.081 23.172,-14.741 z\"\r\n        id=\"path8675\"\r\n      />\r\n      <path\r\n        d=\"m 192.51,105.47 c 13.768,2.314 13.074,7.1734 13.074,7.1734 l -1.2148,10.413 c 0,0 -4.1652,-3.6446 -11.107,-3.5867 0.45703,-6.9902 0.20128,-8.9292 -0.75206,-14 z\"\r\n        id=\"path8677\"\r\n      />\r\n    </g>\r\n  </g>\r\n);\r\n\r\nexport default CandyCane;\r\n","import React from \"react\";\r\n\r\nconst Circle = ({ colour }) => (\r\n  <circle\r\n    style={{\r\n      fillOpacity: 0,\r\n      stroke: colour,\r\n      strokeWidth: 1.17305505\r\n    }}\r\n    id=\"circle1492\"\r\n    cy=\"12.000002\"\r\n    cx=\"12\"\r\n    r=\"11.413472\"\r\n  />\r\n);\r\n\r\nexport default Circle;\r\n","import React from \"react\";\r\n\r\nconst Cross = ({ colour }) => (\r\n  <g\r\n    id=\"g4326\"\r\n    transform=\"matrix(31.424648,0,0,31.457888,0.59053775,0.47721814)\"\r\n    style={{ stroke: colour }}\r\n  >\r\n    <path\r\n      style={{ strokeWidth: 0.03180537 }}\r\n      d=\"M 0.00465846,0.73019984 0.71755802,0.01688217\"\r\n      id=\"path5999\"\r\n    />\r\n    <path\r\n      id=\"path6001\"\r\n      d=\"M -0.00552659,0.73803206 0.73008813,8.5089636e-4\"\r\n      style={{ strokeWidth: 0.03730771 }}\r\n    />\r\n    <path\r\n      style={{ strokeWidth: 0.03730771 }}\r\n      d=\"M 0.73008813,0.73803206 -0.00552659,8.5089636e-4\"\r\n      id=\"path6003\"\r\n    />\r\n  </g>\r\n);\r\n\r\nexport default Cross;\r\n","import React from \"react\";\r\n\r\nconst Pencils = ({ colour }) => (\r\n  <g\r\n    transform=\"matrix(0.1184044,0,0,0.1184044,-2.193818,-8.6025886)\"\r\n    id=\"g10023\"\r\n    style={{ stroke: \"#000000\" }}\r\n  >\r\n    <rect\r\n      transform=\"matrix(0.72343,0.6904,-0.72693,0.68671,0,0)\"\r\n      x=\"195.55\"\r\n      y=\"134.17\"\r\n      width=\"35.048\"\r\n      height=\"32.251999\"\r\n      id=\"rect9963\"\r\n      style={{ fill: \"#ffaec9\", strokeWidth: 2.7026999 }}\r\n    />\r\n    <path\r\n      d=\"m 197.04,123.51 -7.4104,7.4776 c -13.688,13.812 -120.36,120.73 -120.45,120.73 -0.04974,0 -5.6213,-5.6221 -12.381,-12.494 l -12.291,-12.494 41.265,-41.458 c 22.696,-22.802 51.475,-51.66 63.953,-64.128 l 22.689,-22.67\"\r\n      style={{\r\n        fill: \"none\",\r\n        strokeWidth: 2.625,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n      id=\"path9965\"\r\n    />\r\n    <path\r\n      d=\"m 172.11,99.028 c -0.96564,5.4069 -3.5575,9.1752 5.9156,6.6498\"\r\n      id=\"path9967\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 178.02,104.97 c -0.96565,5.4069 -3.5575,9.1752 5.9156,6.6498\"\r\n      id=\"path9969\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 184.66,110.91 c -0.96565,5.4069 -3.5575,9.1752 5.9156,6.6498\"\r\n      id=\"path9971\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 190.57,116.86 c -0.96564,5.4069 -3.5575,9.1752 5.9156,6.6498\"\r\n      id=\"path9973\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 67.98,248.7 c -0.6751,-0.82522 -5.7708,-6.0845 -11.324,-11.687 l -10.096,-10.187 7.8486,-7.9139 c 4.3167,-4.3526 32.089,-32.224 61.717,-61.936 l 53.868,-54.022 0.16743,1.4032 c 0.32022,2.6837 0.85263,3.0555 4.1601,2.9053 1.935,-0.0879 2.2552,-0.0401 2.1185,0.31623 -0.0886,0.23087 -0.23445,1.2056 -0.32415,2.1661 -0.12614,1.3508 -0.059,1.9052 0.29667,2.448 0.67515,1.0304 2.316,1.3888 4.6798,1.022 1.0574,-0.16407 1.9843,-0.2983 2.0597,-0.2983 0.0754,0 0.0196,0.40959 -0.12392,0.9102 -0.14357,0.50062 -0.26104,1.567 -0.26104,2.3697 0,1.1391 0.1489,1.6324 0.67815,2.2469 0.64942,0.75404 0.77896,0.78591 3.058,0.75247 l 2.3799,-0.0349 -0.14752,2.1522 c -0.13597,1.9838 -0.0943,2.214 0.53222,2.9424 0.54277,0.63102 0.99951,0.8264 2.267,0.96973 l 1.5872,0.17951 -56.183,56.408 c -30.9,31.025 -58.781,59.104 -61.957,62.398 l -5.7743,5.9896 z\"\r\n      style={{\r\n        fill: colour,\r\n        strokeWidth: 1.32579994,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n      id=\"path9975\"\r\n    />\r\n    <path\r\n      d=\"m 50.429,233.38 127.59,-127.7\"\r\n      id=\"path9977\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"m 55.985,240.05 127.59,-127.7\"\r\n      id=\"path9979\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"M 62.097,245.6 189.687,117.9\"\r\n      id=\"path9981\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"M 62.097,245.6 189.687,117.9\"\r\n      id=\"path9983\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"m 172.11,99.028 46.711,-23.838 -22.33,48.315\"\r\n      id=\"path9985\"\r\n      style={{ fill: \"none\", strokeWidth: 2.29999995 }}\r\n    />\r\n    <path\r\n      d=\"m 207.04,81.143 c 1.2453,5.8121 3.857,4.7923 6.0854,5.6885\"\r\n      id=\"path9987\"\r\n      style={{ fill: \"none\", strokeWidth: 1.25 }}\r\n    />\r\n    <path\r\n      transform=\"matrix(0.26458,0,0,0.26458,18.528,72.847)\"\r\n      d=\"m 727.77,48.161 c -3.9956,-1.1571 -4.7952,-1.6398 -7.1531,-4.3186 -1.6529,-1.8778 -5.0156,-8.5901 -4.4942,-8.9711 1.5942,-1.165 30.959,-15.655 30.777,-15.187 -0.14221,0.36648 -3.2501,7.1351 -6.9064,15.041 -7.5133,16.247 -6.4709,15.101 -12.224,13.435 z\"\r\n      style={{ strokeWidth: 2.36220002, paintOrder: \"markers fill stroke\" }}\r\n      id=\"path9989\"\r\n    />\r\n    <path\r\n      transform=\"matrix(0.26458,0,0,0.26458,18.528,72.847)\"\r\n      d=\"m 650.96,190.21 c -1.6394,-1.1929 -1.4822,-4.7099 0.625,-13.977 0.9625,-4.233 1.75,-8.1353 1.75,-8.6716 0,-0.80868 -0.53333,-1.0617 -3.125,-1.4823 -1.8937,-0.30738 -3.2406,-0.32578 -3.4183,-0.0467 -0.50273,0.78947 -9.521,2.4025 -13.47,2.4094 -4.9424,0.009 -5.9885,-0.67302 -5.9804,-3.8968 0.003,-1.2907 0.8916,-6.2842 1.9741,-11.097 1.0825,-4.8128 1.8111,-8.8938 1.6191,-9.0695 -0.19202,-0.17572 -1.6499,-0.53652 -3.2397,-0.80178 -2.454,-0.40944 -3.6246,-0.30002 -7.75,0.72445 -6.5567,1.6282 -14.595,2.0986 -16.339,0.95605 -1.0836,-0.70999 -1.2702,-1.2044 -1.2702,-3.3648 0,-1.3929 0.76969,-5.944 1.7104,-10.113 2.4852,-11.015 2.6082,-9.9165 -1.1879,-10.609 -2.5542,-0.46582 -3.3584,-0.45768 -3.8551,0.0391 -0.91321,0.91319 -8.7933,2.241 -13.292,2.2399 -4.5759,-0.001 -5.875,-0.83442 -5.875,-3.7682 0,-1.851 2.8729,-15.718 3.4498,-16.652 0.52104,-0.84305 127.74,-65.601 128.07,-65.194 0.16381,0.19947 0.9067,1.8358 1.6509,3.6364 2.6665,6.4515 7.7969,10.593 14.966,12.082 2.2627,0.46991 2.8258,0.76735 2.5976,1.372 -0.16027,0.42464 -14.141,30.741 -31.067,67.369 l -30.776,66.597 -3.5715,0.83675 c -5.3848,1.2616 -12.779,1.5121 -14.197,0.48097 z\"\r\n      style={{\r\n        fill: \"#efe4b0\",\r\n        strokeWidth: 2.36220002,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n      id=\"path9991\"\r\n    />\r\n    <rect\r\n      transform=\"matrix(-0.72343,0.6904,0.72693,0.68671,0,0)\"\r\n      x=\"30.663\"\r\n      y=\"299.94\"\r\n      width=\"35.048\"\r\n      height=\"32.251999\"\r\n      id=\"rect9993\"\r\n      style={{ fill: \"#ffaec9\", strokeWidth: 2.7026999 }}\r\n    />\r\n    <path\r\n      d=\"m 42.741,123.51 7.4104,7.4776 c 13.688,13.812 120.36,120.73 120.45,120.73 0.0497,0 5.6213,-5.6221 12.381,-12.494 l 12.291,-12.494 -41.265,-41.458 c -22.696,-22.802 -51.475,-51.66 -63.953,-64.128 l -22.689,-22.67\"\r\n      style={{\r\n        fill: \"none\",\r\n        strokeWidth: 2.625,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n      id=\"path9995\"\r\n    />\r\n    <path\r\n      d=\"m 67.678,99.028 c 0.96564,5.4069 3.5575,9.1752 -5.9156,6.6498\"\r\n      id=\"path9997\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 61.762,104.97 c 0.96565,5.4069 3.5575,9.1752 -5.9156,6.6498\"\r\n      id=\"path9999\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 55.127,110.91 c 0.96565,5.4069 3.5575,9.1752 -5.9156,6.6498\"\r\n      id=\"path10001\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 49.212,116.86 c 0.96564,5.4069 3.5575,9.1752 -5.9156,6.6498\"\r\n      id=\"path10003\"\r\n      style={{ fill: \"none\", strokeWidth: 1.68449998 }}\r\n    />\r\n    <path\r\n      d=\"m 171.8,248.7 c 0.6751,-0.82522 5.7708,-6.0845 11.324,-11.687 l 10.096,-10.187 -7.8486,-7.9139 c -4.3168,-4.3526 -32.089,-32.224 -61.717,-61.936 l -53.868,-54.022 -0.16743,1.4032 c -0.32022,2.6837 -0.85263,3.0555 -4.1601,2.9053 -1.935,-0.0879 -2.2552,-0.0401 -2.1185,0.31623 0.08859,0.23087 0.23446,1.2056 0.32415,2.1661 0.12614,1.3508 0.05896,1.9052 -0.29667,2.448 -0.67515,1.0304 -2.316,1.3888 -4.6798,1.022 -1.0574,-0.16407 -1.9843,-0.2983 -2.0597,-0.2983 -0.07542,0 -0.01964,0.40959 0.12392,0.9102 0.14357,0.50062 0.26104,1.567 0.26104,2.3697 0,1.1391 -0.1489,1.6324 -0.67815,2.2469 -0.64942,0.75404 -0.77896,0.78591 -3.058,0.75247 l -2.3799,-0.0349 0.14751,2.1522 c 0.13597,1.9838 0.09433,2.214 -0.53221,2.9424 -0.54278,0.63102 -0.99951,0.8264 -2.267,0.96973 l -1.5872,0.17951 56.183,56.408 c 30.9,31.025 58.781,59.104 61.957,62.398 l 5.7743,5.9896 z\"\r\n      style={{\r\n        fill: colour,\r\n        strokeWidth: 1.32579994,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n      id=\"path10005\"\r\n    />\r\n    <path\r\n      d=\"M 189.36,233.38 61.77,105.68\"\r\n      id=\"path10007\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"M 183.8,240.05 56.21,112.35\"\r\n      id=\"path10009\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"M 177.69,245.6 50.1,117.9\"\r\n      id=\"path10011\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"M 177.69,245.6 50.1,117.9\"\r\n      id=\"path10013\"\r\n      style={{ fill: \"none\", strokeWidth: 1.3125 }}\r\n    />\r\n    <path\r\n      d=\"M 67.678,99.028 20.967,75.19 l 22.33,48.315\"\r\n      id=\"path10015\"\r\n      style={{ fill: \"none\", strokeWidth: 2.29999995 }}\r\n    />\r\n    <path\r\n      d=\"m 32.741,81.143 c -1.2453,5.8121 -3.857,4.7923 -6.0854,5.6885\"\r\n      id=\"path10017\"\r\n      style={{ fill: \"none\", strokeWidth: 1.25 }}\r\n    />\r\n    <path\r\n      d=\"m 28.701,85.59 c 1.0572,-0.30615 1.2687,-0.43387 1.8926,-1.1426 0.43733,-0.49683 1.327,-2.2728 1.1891,-2.3736 -0.4218,-0.30824 -8.1913,-4.142 -8.1432,-4.0181 0.03763,0.09696 0.85992,1.8878 1.8273,3.9797 1.9879,4.2986 1.7121,3.9955 3.2342,3.5547 z\"\r\n      style={{ strokeWidth: 0.625, paintOrder: \"markers fill stroke\" }}\r\n      id=\"path10019\"\r\n    />\r\n    <path\r\n      d=\"m 49.024,123.17 c 0.43377,-0.31563 0.39216,-1.2462 -0.16536,-3.6982 -0.25466,-1.12 -0.46302,-2.1524 -0.46302,-2.2944 0,-0.21396 0.14111,-0.2809 0.82682,-0.3922 0.50105,-0.0813 0.8574,-0.0862 0.90442,-0.0124 0.13301,0.20889 2.5191,0.63567 3.5641,0.6375 1.3077,0.002 1.5844,-0.17807 1.5823,-1.031 -7.94e-4,-0.34148 -0.2359,-1.6627 -0.52232,-2.936 -0.28642,-1.2733 -0.47919,-2.3532 -0.42839,-2.3996 0.05081,-0.0465 0.43653,-0.14195 0.85717,-0.21214 0.64928,-0.10833 0.959,-0.0794 2.0505,0.19168 1.7348,0.4308 3.8617,0.55525 4.3231,0.25296 0.2867,-0.18785 0.33609,-0.31868 0.33609,-0.89028 0,-0.36854 -0.20365,-1.5727 -0.45255,-2.6759 -0.65755,-2.9144 -0.69009,-2.6237 0.31429,-2.8069 0.67579,-0.12324 0.88858,-0.12109 1.02,0.0104 0.24162,0.24161 2.3266,0.59294 3.517,0.59263 1.2107,-2.7e-4 1.5544,-0.22078 1.5544,-0.997 0,-0.48976 -0.76013,-4.1588 -0.91276,-4.4057 -0.13786,-0.22306 -33.797,-17.357 -33.886,-17.249 -0.04334,0.05278 -0.2399,0.48573 -0.43679,0.96212 -0.70551,1.707 -2.0629,2.8028 -3.9597,3.1968 -0.59868,0.12433 -0.74767,0.20303 -0.68728,0.36302 0.04241,0.11235 3.7414,8.1335 8.2199,17.825 l 8.1428,17.62 0.94497,0.22139 c 1.4247,0.33378 3.3812,0.40007 3.7562,0.12725 z\"\r\n      style={{\r\n        fill: \"#efe4b0\",\r\n        strokeWidth: 0.625,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n      id=\"path10021\"\r\n    />\r\n  </g>\r\n);\r\n\r\nexport default Pencils;\r\n","import React from \"react\";\r\n\r\nconst Smiley = ({ colour }) => (\r\n  <g\r\n    transform=\"matrix(0.1202441,0,0,0.1202441,10.428289,-13.642055)\"\r\n    id=\"g6696\"\r\n    style={{ stroke: \"#000\", fill: colour }}\r\n  >\r\n    <circle\r\n      cx=\"13.071\"\r\n      cy=\"213.25\"\r\n      r=\"97.296997\"\r\n      id=\"circle6678\"\r\n      style={{ strokeWidth: 5 }}\r\n    />\r\n    <g transform=\"matrix(0.95337,0,0,1.0029,0.59085,7.3991)\" id=\"g6690\">\r\n      <g id=\"g6688\">\r\n        <path\r\n          d=\"m -39.105,234.64 h 104.8\"\r\n          id=\"path6682\"\r\n          style={{ strokeWidth: 5 }}\r\n        />\r\n        <path\r\n          transform=\"translate(-8.3333e-8,1.1875e-6)\"\r\n          d=\"m -36.726,235.52 c 1.1821,4.4236 5.4584,36.763 47.42,36.763 41.961,0 49.568,-16.064 52.58,-36.763\"\r\n          id=\"path6684\"\r\n          style={{ strokeWidth: 5 }}\r\n        />\r\n        <path\r\n          d=\"m 2.2725,270.14 c -5.5923,-0.70283 -12.501,-2.836 -17.181,-5.3051 -3.7458,-1.9761 -11.317,-8.2854 -11.317,-9.4309 0,-0.27745 9.5151,-0.4762 22.798,-0.4762 h 22.798 v -5.2539 h -49.587 l -1.3673,-3.2837 c -1.4466,-3.4743 -2.9184,-8.0962 -2.9278,-9.1944 -0.0045,-0.52069 9.8825,-0.65675 47.723,-0.65675 h 47.728 l -0.36538,2.4956 c -0.20096,1.3726 -1.0423,4.644 -1.8696,7.2697 -5.1227,16.259 -18.052,23.292 -44.257,24.076 -4.5597,0.13641 -10.039,0.0283 -12.176,-0.24039 z\"\r\n          id=\"path6686\"\r\n          style={{ fill: \"#ffffff\", strokeWidth: 0 }}\r\n        />\r\n      </g>\r\n    </g>\r\n    <ellipse\r\n      cx=\"-19.226\"\r\n      cy=\"178.03999\"\r\n      rx=\"10.513\"\r\n      ry=\"23.013\"\r\n      id=\"ellipse6692\"\r\n      style={{ fill: \"#ffffff\", strokeWidth: 3.97309995 }}\r\n    />\r\n    <ellipse\r\n      cx=\"40.773998\"\r\n      cy=\"178.03999\"\r\n      rx=\"10.513\"\r\n      ry=\"23.013\"\r\n      id=\"ellipse6694\"\r\n      style={{ fill: \"#ffffff\", strokeWidth: 3.97309995 }}\r\n    />\r\n    <path\r\n      d=\"M -28.861,260.29 H 18.807\"\r\n      id=\"path6680\"\r\n      style={{ strokeWidth: 6 }}\r\n    />\r\n  </g>\r\n);\r\n\r\nexport default Smiley;\r\n","import React from \"react\";\r\n\r\nconst Swords = ({ colour }) => (\r\n  <g\r\n    transform=\"matrix(0.12211168,0,0,0.12211168,-0.84187499,-5.2372884)\"\r\n    id=\"g9336\"\r\n  >\r\n    <g\r\n      transform=\"matrix(1.25,0,0,1.25,-52.41,-112.51)\"\r\n      id=\"g9298\"\r\n      style={{ strokeWidth: 2.5, stroke: \"#000\" }}\r\n    >\r\n      <path\r\n        d=\"m 75.35,243.29 c -12.807,12.824 -20.511,22.393 -25.793,28.614 -3.2308,3.8057 3.702,11.209 8.4467,7.3048 5.0214,-4.132 14.418,-12.623 27.003,-25.865\"\r\n        id=\"path9292\"\r\n      />\r\n      <path\r\n        d=\"m 84.504,243.59 c -4.6826,-4.2274 -15.205,-13.04 -15.205,-13.04 -1.554,-1.3143 -5.2556,2.5928 -3.7222,4.477 1.8811,2.3115 4.8013,4.9982 9.7734,9.8533\"\r\n        id=\"path9294\"\r\n      />\r\n      <path\r\n        d=\"m 84.023,253.48 c 5.4064,4.107 8.6438,7.728 10.786,9.3776 1.6127,1.2417 6.1326,-3.2166 4.5133,-5.0274 -2.206,-2.4669 -9.6172,-9.7138 -14.819,-14.245\"\r\n        id=\"path9296\"\r\n      />\r\n    </g>\r\n    <g\r\n      id=\"g9306\"\r\n      style={{\r\n        fill: \"none\",\r\n        strokeWidth: 2.5,\r\n        paintOrder: \"markers fill stroke\",\r\n        stroke: \"#000\"\r\n      }}\r\n    >\r\n      <path\r\n        d=\"m 61.214,198.66 c 76.185,-50.201 139.49,-92.795 140.97,-153.6\"\r\n        id=\"path9300\"\r\n      />\r\n      <path\r\n        d=\"m 151.34,60.438 c 22.79,9.0595 37.853,-0.64546 50.843,-15.385\"\r\n        id=\"path9302\"\r\n      />\r\n      <path\r\n        d=\"m 151.88,59.427 c -19.879,40.94 -60.744,83.398 -102.81,127.25\"\r\n        id=\"path9304\"\r\n      />\r\n    </g>\r\n    <g\r\n      id=\"g9312\"\r\n      style={{ fill: \"#c3c3c3\", paintOrder: \"markers fill stroke\" }}\r\n    >\r\n      <path\r\n        d=\"m 49.095,186.65 31.876,-32.884 c 49.449,-51.013 48.723,-58.485 67.062,-85.822 2.025,-3.0186 2.0186,-9.7908 3.3083,-7.5106 0.27149,0.0045 4.0284,1.518 6.0863,2.1772 5.8248,1.8658 16.65,1.6823 22.553,-0.37892 6.0617,-2.1167 11.175,-5.7404 16.117,-10.557 l 4.433,-2.6503 0.93436,4.034 c -0.72831,6.3768 -4.2069,18.705 -6.9977,25.18 -11.389,26.42 -36.803,52.599 -81.818,84.708 -10.962,7.8192 -51.414,35.687 -51.322,33.679 -0.138,-0.019 -8.0864,-4.6716 -12.233,-9.9759 z\"\r\n        id=\"path9308\"\r\n      />\r\n      <path\r\n        d=\"M 161.23,186.65 129.354,153.766 C 79.905,102.753 80.631,95.281 62.292,67.944 c -2.025,-3.0186 -2.0186,-9.7908 -3.3083,-7.5106 -0.27149,0.0045 -4.0284,1.518 -6.0863,2.1772 -5.8248,1.8658 -16.65,1.6823 -22.553,-0.37892 -6.0617,-2.1167 -11.175,-5.7404 -16.117,-10.557 l -4.433,-2.6503 -0.93436,4.034 c 0.72831,6.3768 4.2069,18.705 6.9977,25.18 11.389,26.42 36.803,52.599 81.818,84.708 10.962,7.8192 51.414,35.687 51.322,33.679 0.138,-0.019 8.0864,-4.6716 12.233,-9.9759 z\"\r\n        id=\"path9310\"\r\n      />\r\n    </g>\r\n    <g\r\n      id=\"g9318\"\r\n      style={{\r\n        fill: colour,\r\n        strokeWidth: 0,\r\n        paintOrder: \"markers fill stroke\"\r\n      }}\r\n    >\r\n      <path\r\n        d=\"m 13.329,235.52 c -2.0603,-1.2726 -3.2132,-1.8948 -3.5022,-3.6758 -0.24355,-1.5008 0.01925,-3.7496 8.2021,-13.288 4.7433,-5.5288 11.598,-14.217 16.318,-18.395 l 7.4297,-6.5757 -5.7211,-6.607 c -3.135,-3.6204 -6.8122,-7.2139 -6.8122,-7.4872 0,-0.27326 -0.61122,0.57423 0,0 l 4.8685,-4.0732 10.51,9.2934 c 15.08,13.335 26.721,24.866 26.721,26.25 0,0.4561 -0.65497,2.8687 -1.4555,3.5423 -1.6753,1.4097 -3.336,1.8888 -8.0239,-2.4377 -5.1588,-4.7612 -7.4493,-8.7765 -8.3863,-8.957 -0.65286,-0.12572 -2.1046,3.3658 -8.8953,10.197 -9.2408,9.2952 -17.828,16.583 -23.101,20.971 -3.0279,2.5198 -5.8836,2.6432 -8.1521,1.242 z\"\r\n        id=\"path9314\"\r\n      />\r\n      <path\r\n        d=\"m 197,235.52 c 2.0603,-1.2726 3.2132,-1.8948 3.5022,-3.6758 0.24355,-1.5008 -0.0192,-3.7496 -8.2021,-13.288 -4.7433,-5.5288 -11.598,-14.217 -16.318,-18.395 l -7.4297,-6.5757 5.7211,-6.607 c 3.135,-3.6204 6.8122,-7.2139 6.8122,-7.4872 0,-0.27326 0.61122,0.57423 0,0 l -4.8685,-4.0732 -10.51,9.2934 c -15.08,13.335 -26.721,24.866 -26.721,26.25 0,0.4561 0.65497,2.8687 1.4555,3.5423 1.6753,1.4097 3.336,1.8888 8.0239,-2.4377 5.1588,-4.7612 7.4493,-8.7765 8.3863,-8.957 0.65286,-0.12572 2.1046,3.3658 8.8953,10.197 9.2408,9.2952 17.828,16.583 23.101,20.971 3.0279,2.5198 5.8836,2.6432 8.1521,1.242 z\"\r\n        id=\"path9316\"\r\n      />\r\n    </g>\r\n    <g\r\n      transform=\"matrix(-1.25,0,0,1.25,262.74,-112.51)\"\r\n      id=\"g9326\"\r\n      style={{ fill: \"none\", stroke: \"#000000\", strokeWidth: 2.5 }}\r\n    >\r\n      <path\r\n        d=\"m 75.35,243.29 c -12.807,12.824 -20.511,22.393 -25.793,28.614 -3.2308,3.8057 3.702,11.209 8.4467,7.3048 5.0214,-4.132 14.418,-12.623 27.003,-25.865\"\r\n        id=\"path9320\"\r\n      />\r\n      <path\r\n        d=\"m 84.504,243.59 c -4.6826,-4.2274 -15.205,-13.04 -15.205,-13.04 -1.554,-1.3143 -5.2556,2.5928 -3.7222,4.477 1.8811,2.3115 4.8013,4.9982 9.7734,9.8533\"\r\n        id=\"path9322\"\r\n      />\r\n      <path\r\n        d=\"m 84.023,253.48 c 5.4064,4.107 8.6438,7.728 10.786,9.3776 1.6127,1.2417 6.1326,-3.2166 4.5133,-5.0274 -2.206,-2.4669 -9.6172,-9.7138 -14.819,-14.245\"\r\n        id=\"path9324\"\r\n      />\r\n    </g>\r\n    <g\r\n      transform=\"matrix(-1,0,0,1,210.33,0)\"\r\n      id=\"g9334\"\r\n      style={{\r\n        fill: \"none\",\r\n        stroke: \"#000000\",\r\n        strokeWidth: 2.5,\r\n        paintOrder: \" markers fill stroke\"\r\n      }}\r\n    >\r\n      <path\r\n        d=\"m 61.214,198.66 c 76.185,-50.201 139.49,-92.795 140.97,-153.6\"\r\n        id=\"path9328\"\r\n      />\r\n      <path\r\n        d=\"m 151.34,60.438 c 22.79,9.0595 37.853,-0.64546 50.843,-15.385\"\r\n        id=\"path9330\"\r\n      />\r\n      <path\r\n        d=\"m 151.88,59.427 c -19.879,40.94 -60.744,83.398 -102.81,127.25\"\r\n        id=\"path9332\"\r\n      />\r\n    </g>\r\n  </g>\r\n);\r\n\r\nexport default Swords;\r\n","import React from \"react\";\r\n\r\nconst Wheel = ({ colour }) => (\r\n  <g id=\"g6642\" style={{ stroke: colour, fill: \"none\", strokeWidth: 10 }}>\r\n    <g\r\n      transform=\"matrix(0.12014392,0,0,0.12014392,-25.541576,-6.9044053)\"\r\n      id=\"g6059\"\r\n    >\r\n      <g transform=\"matrix(0.95238,0,0,0.95118,212.91,16.7)\" id=\"g6057\">\r\n        <circle cx=\"104.54\" cy=\"147.86\" r=\"100\" id=\"circle6055\" />\r\n      </g>\r\n    </g>\r\n    <g\r\n      transform=\"matrix(0.07903427,0,0,0.07997981,3.3664931,-0.18494807)\"\r\n      id=\"g6065\"\r\n    >\r\n      <path\r\n        d=\"M 11.462,250.28 C 71.827,189.709 113.952,147.5 143.342,118.09 211.213,50.181 211.213,50.501 211.213,50.501\"\r\n        id=\"path6061\"\r\n      />\r\n      <path\r\n        d=\"M 209.49,252.38 C 9.06,52.63 9.71,52.63 9.71,52.63\"\r\n        id=\"path6063\"\r\n      />\r\n    </g>\r\n    <g\r\n      transform=\"matrix(-0.05721854,-0.05719812,0.05770753,-0.05772915,9.7,27.037982)\"\r\n      id=\"g6071\"\r\n    >\r\n      <path\r\n        d=\"M 11.462,250.28 C 71.827,189.709 113.952,147.5 143.342,118.09 211.213,50.181 211.213,50.501 211.213,50.501\"\r\n        id=\"path6067\"\r\n      />\r\n      <path\r\n        d=\"M 211.39221,250.4953 C 10.962209,50.745289 11.612209,50.745289 11.612209,50.745289\"\r\n        id=\"path6069\"\r\n      />\r\n    </g>\r\n  </g>\r\n);\r\n\r\nexport default Wheel;\r\n","import React from \"react\";\r\nimport { SvgIcon as MuiSvgIcon } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    padding: \"3px\"\r\n  }\r\n};\r\n\r\nconst SvgIcon = ({ colour, bgColour, children, classes, className }) => {\r\n  return (\r\n    <MuiSvgIcon\r\n      style={{ backgroundColor: bgColour }}\r\n      className={`${classes.root} ${className}`}\r\n    >\r\n      {children}\r\n    </MuiSvgIcon>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SvgIcon);\r\n","import React from \"react\";\r\nimport Button from \"./SvgComponents/Button\";\r\nimport CandyCane from \"./SvgComponents/CandyCane\";\r\nimport Circle from \"./SvgComponents/Circle\";\r\nimport Cross from \"./SvgComponents/Cross\";\r\nimport Pencils from \"./SvgComponents/Pencils\";\r\nimport Smiley from \"./SvgComponents/Smiley\";\r\nimport Swords from \"./SvgComponents/Swords\";\r\nimport Wheel from \"./SvgComponents/Wheel\";\r\nimport SvgIcon from \"./SvgIcon/SvgIcon\";\r\nimport { hex } from \"color-convert\";\r\n\r\nconst Icon = ({\r\n  colour,\r\n  bgColour = bgColourCalculator(colour),\r\n  className,\r\n  icon\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <SvgIcon className={className} bgColour={bgColour}>\r\n        {icon === \"button\" && <Button colour={colour} />}\r\n        {icon === \"candyCane\" && <CandyCane colour={colour} />}\r\n        {icon === \"circle\" && <Circle colour={colour} />}\r\n        {icon === \"cross\" && <Cross colour={colour} />}\r\n        {icon === \"pencils\" && <Pencils colour={colour} />}\r\n        {icon === \"smiley\" && <Smiley colour={colour} />}\r\n        {icon === \"swords\" && <Swords colour={colour} />}\r\n        {icon === \"wheel\" && <Wheel colour={colour} />}\r\n      </SvgIcon>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst bgColourCalculator = colour => {\r\n  if (!colour) {\r\n    return \"#fff\";\r\n  }\r\n  const colourBrightness = hex.hsl(`${colour.slice(1)}`)[2];\r\n  if (colourBrightness < 95) {\r\n    return \"#fff\";\r\n  } else {\r\n    return \"#f9ab55\";\r\n  }\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport { Button, Card } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    height: \"75%\",\r\n    width: \"75%\",\r\n    maxWidth: \"680px\",\r\n    maxHeight: \"400px\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\"\r\n  }\r\n};\r\n\r\nconst GameModeCard = ({\r\n  changeHoverState,\r\n  children,\r\n  classes,\r\n  colour,\r\n  onClick,\r\n  label\r\n}) => {\r\n  return (\r\n    <Card raised className={classes.card}>\r\n      {children}\r\n      <Button\r\n        size=\"large\"\r\n        color={colour}\r\n        variant=\"contained\"\r\n        onMouseOver={() => changeHoverState(true)}\r\n        onMouseLeave={() => changeHoverState(false)}\r\n        onClick={onClick}\r\n      >\r\n        {label}\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(GameModeCard);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { unstable_useMediaQuery as useMediaQuery } from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst CoverTransition = ({ classes, colour, hovered, vertDirection }) => {\r\n  const noHover = useMediaQuery(\"(hover: none)\");\r\n  const isLandscape = useMediaQuery(\"(orientation:landscape)\");\r\n  const horiDirection = vertDirection === \"top\" ? \"left\" : \"right\";\r\n  const direction = isLandscape ? horiDirection : vertDirection;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <div\r\n          className={`${classes.cover} ${classes[direction]} ${\r\n            classes[colour]\r\n          }`}\r\n          style={hovered || noHover ? { [direction]: 0 } : null}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst createDirectionStyles = direction => ({\r\n  [direction]: \"100%\",\r\n  transition: `${direction} linear 100ms`\r\n});\r\n\r\nconst getAllDirectionStyles = [\"top\", \"left\", \"right\", \"bottom\"].map(\r\n  createDirectionStyles\r\n);\r\nconst [top, left, right, bottom] = getAllDirectionStyles;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    width: \"100%\"\r\n  },\r\n  wrapper: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    top: 0,\r\n    left: 0,\r\n    overflow: \"hidden\"\r\n  },\r\n  cover: {\r\n    pointerEvents: \"none\",\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  top,\r\n  left,\r\n  right,\r\n  bottom\r\n});\r\n\r\nexport default withStyles(styles)(CoverTransition);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGameMode } from \"../../actions\";\r\nimport Icon from \"../../components/Icon/Icon\";\r\nimport GameModeCard from \"./GameModeCard\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CoverTransition from \"./CoverTransition\";\r\nimport { Computer } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n  coverTransitionWrapper: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    \"@media (orientation:landscape)\": {\r\n      height: \"100%\",\r\n      width: \"50%\",\r\n      float: \"left\"\r\n    }\r\n  },\r\n  icon: {\r\n    height: \"50%\",\r\n    width: \"50%\"\r\n  },\r\n  svg: {\r\n    color: theme.palette.primary.main\r\n  }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeGameMode: gameMode => dispatch(changeGameMode(gameMode))\r\n});\r\n\r\nclass GameModeSelect extends Component {\r\n  state = {\r\n    vscompHovered: false,\r\n    pvpHovered: false\r\n  };\r\n\r\n  changeHoverState = (buttonType, status) => {\r\n    const hoverType = `${buttonType}Hovered`;\r\n    this.setState({ [hoverType]: status });\r\n  };\r\n\r\n  handleClick = gameMode => {\r\n    this.props.changeGameMode(gameMode);\r\n    this.props.changeRoute(\"iconSelect\");\r\n  };\r\n\r\n  render() {\r\n    const { vscompHovered, pvpHovered } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className={classes.coverTransitionWrapper}\r\n          onMouseOver={() => this.changeHoverState(\"vscomp\", true)}\r\n          onMouseLeave={() => this.changeHoverState(\"vscomp\", false)}\r\n        >\r\n          <CoverTransition\r\n            hovered={vscompHovered}\r\n            vertDirection=\"top\"\r\n            colour=\"primary\"\r\n          />\r\n          <GameModeCard\r\n            classes={{ button: classes.compButton }}\r\n            colour=\"primary\"\r\n            label=\"VS COMP\"\r\n            onClick={() => this.handleClick(\"vsComp\")}\r\n            changeHoverState={newHoverState =>\r\n              this.changeHoverState(\"vscomp\", newHoverState)\r\n            }\r\n          >\r\n            <Computer className={`${classes.icon} ${classes.svg}`} />\r\n          </GameModeCard>\r\n        </div>\r\n        <div\r\n          className={classes.coverTransitionWrapper}\r\n          onMouseOver={() => this.changeHoverState(\"pvp\", true)}\r\n          onMouseLeave={() => this.changeHoverState(\"pvp\", false)}\r\n        >\r\n          <CoverTransition\r\n            hovered={pvpHovered}\r\n            vertDirection=\"bottom\"\r\n            colour=\"secondary\"\r\n          />\r\n          <GameModeCard\r\n            classes={{ button: classes.pvpButton }}\r\n            colour=\"secondary\"\r\n            label=\"LOCAL 2P\"\r\n            onClick={() => this.handleClick(\"pvp\")}\r\n            changeHoverState={newHoverState =>\r\n              this.changeHoverState(\"pvp\", newHoverState)\r\n            }\r\n          >\r\n            <Icon className={classes.icon} colour=\"#f9ab55\" icon=\"swords\" />\r\n          </GameModeCard>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(GameModeSelect)\r\n);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ButtonBase } from \"@material-ui/core\";\r\nimport Icon from \"../Icon/Icon\";\r\n\r\nconst styles = {\r\n  buttonBase: {\r\n    display: \"block\",\r\n    boxShadow:\r\n      \"0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.08)\"\r\n    }\r\n  },\r\n  icon: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: -1,\r\n    backgroundColor: \"transparent\"\r\n  }\r\n};\r\n\r\nconst IconButton = ({\r\n  onClick,\r\n  className,\r\n  classes,\r\n  disabled,\r\n  icon,\r\n  colour\r\n}) => {\r\n  return (\r\n    <ButtonBase\r\n      disabled={disabled}\r\n      variant=\"contained\"\r\n      onClick={onClick}\r\n      classes={{ root: `${classes.buttonBase} ${className}` }}\r\n    >\r\n      <Icon className={classes.icon} icon={icon} colour={colour} />\r\n    </ButtonBase>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(IconButton);\r\n","import React from \"react\";\r\nimport IconButton from \"../../../components/IconButton/IconButton\";\r\n\r\nimport styles from \"./IconPreview.module.scss\";\r\n\r\nconst IconPreview = ({ iconInfo, changeRoute, toggleIconSelectFlipped }) => {\r\n  const { userIcon, userIconColour, compIcon, compIconColour } = iconInfo;\r\n  return (\r\n    <div className={styles.iconPreviewWrapper}>\r\n      <IconButton\r\n        onClick={changeRoute}\r\n        className={styles.icon}\r\n        icon={userIcon}\r\n        colour={userIconColour}\r\n      />\r\n      <span className={styles.highlight}>VS</span>\r\n      <IconButton\r\n        onClick={() => {\r\n          changeRoute(\"iconSelect\");\r\n          toggleIconSelectFlipped();\r\n        }}\r\n        className={styles.icon}\r\n        icon={compIcon}\r\n        colour={compIconColour}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconPreview;\r\n","import React from \"react\";\r\nimport styles from \"./Grid.module.scss\";\r\n\r\nconst Grid = ({ outcome, gridSize, generateSquares, gameMode }) => {\r\n  const isDraw = outcome === \"draw\";\r\n  const player1 = gameMode === \"pvp\" ? \"PLAYER 1\" : \"PLAYER\";\r\n  const player2 = gameMode === \"pvp\" ? \"PLAYER 2\" : \"COMP\";\r\n  const gridClassName = styles[`grid-${gridSize}`];\r\n  return (\r\n    <div className={gridClassName}>\r\n      {outcome && (\r\n        <div className={styles.outcome}>\r\n          {outcome && isDraw && \"DRAW!\"}\r\n          {outcome === \"user\" && `${player1} WINS!`}\r\n          {outcome === \"comp\" && `${player2} WINS!`}\r\n        </div>\r\n      )}\r\n      {generateSquares()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { unstable_useMediaQuery as useMediaQuery } from \"@material-ui/core/useMediaQuery\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ControlsButton = props => {\r\n  const isLandscape = useMediaQuery(\"(orientation: landscape)\");\r\n  return isLandscape ? <LandscapeButton {...props} /> : <Button {...props} />;\r\n};\r\n\r\nconst landscapeStyles = {\r\n  root: {\r\n    margin: \"3.5% 0\",\r\n    height: \"23%\"\r\n  }\r\n};\r\n\r\nconst LandscapeButton = withStyles(landscapeStyles)(props => {\r\n  const newClassName = `${props.classes.root} ${props.className}`;\r\n  return (\r\n    <Button className={newClassName} {...props}>\r\n      {props.children}\r\n    </Button>\r\n  );\r\n});\r\n\r\nexport default ControlsButton;\r\n","import React from \"react\";\r\nimport ControlsButton from \"./ControlsButton/ControlsButton\";\r\nimport styles from \"./Controls.module.scss\";\r\n\r\nconst Controls = ({ clickHandlersObj }) => {\r\n  const { restartGame, undoTurn, redoTurn, changeRoute } = clickHandlersObj;\r\n  return (\r\n    <div className={styles.controls}>\r\n      <ControlsButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ marginTop: 0 }}\r\n        onClick={undoTurn}\r\n      >\r\n        Undo\r\n      </ControlsButton>\r\n      <ControlsButton\r\n        onClick={() => restartGame()}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Restart\r\n      </ControlsButton>\r\n      <ControlsButton variant=\"contained\" color=\"primary\" onClick={redoTurn}>\r\n        Redo\r\n      </ControlsButton>\r\n      <ControlsButton\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        className={styles.settingsBtn}\r\n        style={{ marginBottom: 0 }}\r\n        onClick={() => changeRoute(\"settings\")}\r\n      >\r\n        Settings\r\n      </ControlsButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport styles from \"./GameSquare.module.scss\";\r\nimport Icon from \"../../../components/Icon/Icon\";\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\n\r\nconst GameSquare = ({ value, onClick, iconInfo, keyProp }) => {\r\n  const { userIcon, userIconColour, compIcon, compIconColour } = iconInfo;\r\n  return (\r\n    <button\r\n      aria-label=\"grid square\"\r\n      className={styles.gameSquare}\r\n      onClick={onClick}\r\n    >\r\n      <ReactCSSTransitionGroup\r\n        transitionName=\"fade\"\r\n        transitionEnterTimeout={500}\r\n        transitionLeaveTimeout={150}\r\n      >\r\n        {value === \"user\" && (\r\n          <Icon key={keyProp} icon={userIcon} colour={userIconColour} />\r\n        )}\r\n        {value === \"comp\" && (\r\n          <Icon key={keyProp} icon={compIcon} colour={compIconColour} />\r\n        )}\r\n      </ReactCSSTransitionGroup>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GameSquare;\r\n","import calculateCompMove from \"../calculateCompMove/calculateCompMove\";\r\nimport simulateMove from \"../simulateMove/simulateMove\";\r\nimport {\r\n  generateIndexArr,\r\n  chooseRandomElementFromArr\r\n} from \"../helperFunctions/helperFunctions\";\r\n\r\nconst simulateGame = (firstMove, gridSize) => {\r\n  let state;\r\n  let movesTaken = 0;\r\n  let initialState = {\r\n    board: Array(gridSize ** 2).fill(null),\r\n    turnNo: 0,\r\n    userTurn: firstMove === \"user\" ? true : false,\r\n    gameLog: [\r\n      {\r\n        board: Array(gridSize ** 2).fill(null),\r\n        turnNo: 0,\r\n        userTurn: firstMove === \"user\" ? true : false,\r\n        outcome: undefined\r\n      }\r\n    ],\r\n    outcome: undefined,\r\n    gridSize\r\n  };\r\n  const maxMoves = gridSize ** 2;\r\n  if (firstMove === \"comp\") {\r\n    state = simulateMove(calculateCompMove(initialState), initialState);\r\n    movesTaken = 1;\r\n  } else {\r\n    state = initialState;\r\n  }\r\n  for (movesTaken; movesTaken < maxMoves; movesTaken = movesTaken + 2) {\r\n    state = simulateRandomMove(state);\r\n    if (state.outcome !== undefined) {\r\n      return state;\r\n    }\r\n    state = simulateMove(calculateCompMove(state), state);\r\n    if (state.outcome !== undefined) {\r\n      return state;\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nconst simulateRandomMove = prevState => {\r\n  const board = prevState.board;\r\n  const chosenMove = chooseRandomElementFromArr(\r\n    generateIndexArr(board.length),\r\n    board\r\n  );\r\n  return simulateMove(chosenMove, prevState);\r\n};\r\n\r\nexport default simulateGame;\r\n","export default (result, counters) => {\r\n  let { gameLog, outcome } = result;\r\n  let { userWinsLog, noOutcomeLog, randomGamesLog } = counters;\r\n  if (Math.random() * 10000 > 9990) {\r\n    gameLog = makeGameLogEasierToRead(result.gameLog);\r\n    randomGamesLog.push(gameLog);\r\n  }\r\n  if (outcome === \"user\") {\r\n    counters.userCounter++;\r\n    gameLog = makeGameLogEasierToRead(gameLog);\r\n    userWinsLog.push(gameLog);\r\n  } else if (outcome === \"comp\") {\r\n    counters.compCounter++;\r\n  } else if (outcome === \"draw\") {\r\n    counters.drawCounter++;\r\n  } else {\r\n    counters.noOutcome++;\r\n    gameLog = makeGameLogEasierToRead(gameLog);\r\n    noOutcomeLog.push(gameLog);\r\n  }\r\n  return counters;\r\n};\r\n\r\nconst makeGameLogEasierToRead = gameLog => {\r\n  if (gameLog.board === undefined) {\r\n  }\r\n  return gameLog.reduce((total, curr) => {\r\n    curr.board.map((x, index) => {\r\n      if (x !== null && !total.includes(index)) {\r\n        total.push(index);\r\n      }\r\n      return x;\r\n    });\r\n    return total;\r\n  }, []);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  makeMove,\r\n  makeUserMoveThenCompMove,\r\n  restartGame,\r\n  restartGameThenCompMove,\r\n  changeToRecordedTurn\r\n} from \"../../actions\";\r\n\r\nimport IconPreview from \"./IconPreview/IconPreview\";\r\nimport Grid from \"./Grid/Grid\";\r\nimport Controls from \"./Controls/Controls\";\r\nimport GameSquare from \"./GameSquare/GameSquare\";\r\n\r\nimport simulateGame from \"../../gameFunctions/testing/simulateGame\";\r\nimport recordGameResults from \"../../gameFunctions/testing/recordGameResults\";\r\nimport { generateIndexArr } from \"../../gameFunctions/helperFunctions/helperFunctions\";\r\n\r\nimport styles from \"./Game.module.scss\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gameState: state.gameStateReducer,\r\n    iconInfo: state.iconInfoReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  makeUserMove: squareNumber => dispatch(makeMove(squareNumber)),\r\n  makeUserMoveThenCompMove: squareNumber =>\r\n    dispatch(makeUserMoveThenCompMove(squareNumber)),\r\n  restartGame: (gridSize, firstMove, gameMode) =>\r\n    dispatch(restartGame(gridSize, firstMove, gameMode)),\r\n  restartGameThenCompMove: (gridSize, firstMove) =>\r\n    dispatch(restartGameThenCompMove(gridSize, firstMove)),\r\n  changeToRecordedTurn: (direction, turnsToMove) =>\r\n    dispatch(changeToRecordedTurn(direction, turnsToMove))\r\n});\r\n\r\nclass Game extends Component {\r\n  handleClick = squareNumber => {\r\n    const { gameBoard, gameMode } = this.props.gameState;\r\n    if (gameBoard[squareNumber] !== null) {\r\n      return;\r\n    }\r\n    if (gameMode === \"vsComp\") {\r\n      //debugger;\r\n      return this.props.makeUserMoveThenCompMove(squareNumber);\r\n    } else {\r\n      return this.props.makeUserMove(squareNumber);\r\n    }\r\n  };\r\n\r\n  restartGame = (gridSize, firstMove, gameMode) => {\r\n    if (firstMove === \"user\" || gameMode === \"pvp\") {\r\n      return this.props.restartGame(gridSize, firstMove, gameMode);\r\n    } else {\r\n      return this.props.restartGameThenCompMove(gridSize, firstMove);\r\n    }\r\n  };\r\n\r\n  generateSquares = iconInfo => {\r\n    const { gridSize, gameBoard } = this.props.gameState;\r\n    const indexArr = generateIndexArr(gridSize ** 2);\r\n    return indexArr.map(index => (\r\n      <GameSquare\r\n        iconInfo={iconInfo}\r\n        key={index}\r\n        keyProp={index}\r\n        value={gameBoard[index]}\r\n        onClick={() => this.handleClick(index)}\r\n      />\r\n    ));\r\n  };\r\n\r\n  test = amountOfGames => {\r\n    let result;\r\n    let counters = {\r\n      userCounter: 0,\r\n      compCounter: 0,\r\n      drawCounter: 0,\r\n      noOutcome: 0,\r\n      userWinsLog: [],\r\n      noOutcomeLog: [],\r\n      randomGamesLog: []\r\n    };\r\n    const { gridSize, firstMove } = this.props.gameState;\r\n    for (let gamesPlayed = 0; gamesPlayed < amountOfGames; gamesPlayed++) {\r\n      result = simulateGame(firstMove, gridSize);\r\n      if (gamesPlayed % (amountOfGames / 20) === 0) {\r\n        console.log(`${(gamesPlayed / amountOfGames) * 100}% done!`);\r\n      }\r\n      counters = recordGameResults(result, counters);\r\n      this.restartGame();\r\n    }\r\n    console.log(counters);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      iconInfo,\r\n      toggleIconSelectFlipped,\r\n      changeRoute,\r\n      changeToRecordedTurn\r\n    } = this.props;\r\n    const { firstMove, gridSize, outcome, gameMode } = this.props.gameState;\r\n    const clickHandlersObj = {\r\n      restartGame: () => this.restartGame(gridSize, firstMove, gameMode),\r\n      undoTurn: () => changeToRecordedTurn(\"back\", gameMode === \"pvp\" ? 1 : 2),\r\n      redoTurn: () =>\r\n        changeToRecordedTurn(\"forward\", gameMode === \"pvp\" ? 1 : 2),\r\n      changeRoute\r\n    };\r\n    return (\r\n      <div className={styles.gameScreenWrapper}>\r\n        <div className={styles.gameScreen}>\r\n          <IconPreview\r\n            iconInfo={iconInfo}\r\n            changeRoute={() => changeRoute(\"iconSelect\")}\r\n            toggleIconSelectFlipped={toggleIconSelectFlipped}\r\n          />\r\n          <Grid\r\n            outcome={outcome}\r\n            gridSize={gridSize}\r\n            gameMode={gameMode}\r\n            generateSquares={() => this.generateSquares(iconInfo)}\r\n          />\r\n          <Controls clickHandlersObj={clickHandlersObj} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Game);\r\n","import React from \"react\";\r\nimport styles from \"./Flipper.module.scss\";\r\n\r\nconst Flipper = ({ front, back, flipped, style }) => {\r\n  const flippedStyles = flipped ? styles.flipped : null;\r\n  return (\r\n    <div className={styles.flipperContainer} style={style}>\r\n      <div className={`${styles.flipper} ${flippedStyles}`}>\r\n        <div className={styles.front}>{front}</div>\r\n        <div className={styles.back}>{back}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flipper;\r\n","import React from \"react\";\r\n\r\nconst Paintbrush = ({ colour }) => (\r\n  <svg viewBox=\"0 0 512 512\" fill=\"transparent\">\r\n    <path\r\n      fill={colour}\r\n      d=\"M505.02 19.549c-14.688-14.686-44.146-6.307-92.708 26.377-41.254 27.766-90.738 69.819-139.34 118.42-72.047 72.046-126.82 142.78-145.06 186.46a63.494 63.494 0 0 0-9.327-2.593c-18.872-3.733-39.369 1.04-56.238 13.086-24.207 17.286-30.618 41.971-31.549 46.132-5.096 19.032-14.747 37.191-27.921 52.529-4.237 4.933-3.753 12.349 1.09 16.691 16.927 15.17 38.58 22.779 61.102 22.779 21.706 0 44.22-7.069 64.077-21.249 9.311-6.649 16.36-14.001 17.725-15.456 16.872-18.131 24.036-41.904 20.482-63.625 42.85-15.361 117.55-72.181 192.87-147.5 48.598-48.598 90.652-98.083 118.42-139.34 32.683-48.564 41.064-78.022 26.376-92.711zm-375.63 426.87c-.642.685-6.495 6.852-14.13 12.302-27.732 19.8-61.684 22.09-86.345 6.845 11.549-15.834 20.132-33.683 25.063-52.254v-.001c.055-.208.105-.418.149-.63.041-.189 4.193-19.127 22.119-31.927 11.53-8.235 25.277-11.547 37.711-9.089 10.255 2.026 18.876 7.88 24.275 16.48 10.595 16.877 6.87 41.391-8.842 58.274zm29.825-69.752c-.245-.41-3.87-7.77-10.624-13.24 5.819-15.557 18.346-36.584 35.806-60.729l37.455 37.455c-26.349 18.967-47.94 31.331-62.637 36.514zm81.981-50.978l-42.301-42.301c7.31-9.41 15.219-19.157 23.648-29.127l47.806 47.806c-10.118 8.545-19.862 16.43-29.153 23.622zm213.96-221.42c-26.926 38.916-66.643 85.235-111.83 130.42-18.973 18.973-37.367 36.232-54.844 51.694l-50.257-50.257c15.94-18.032 33.32-36.538 51.661-54.877 45.188-45.189 91.507-84.905 130.42-111.83 47.916-33.155 64.45-33.208 67.626-32.774.436 3.173.378 19.713-32.776 67.626z\"\r\n    />\r\n    <path\r\n      fill={colour}\r\n      d=\"M119.26 414.12c-5.783-3.183-13.052-1.076-16.236 4.708a8.62 8.62 0 0 1-1.158 1.626c-.894.93-3.832 3.77-6.884 5.951-4.63 3.305-9.626 5.674-14.85 7.041-6.387 1.671-10.209 8.203-8.538 14.59 1.406 5.372 6.25 8.93 11.555 8.93 1.002 0 2.019-.127 3.034-.391 8.049-2.106 15.684-5.71 22.693-10.714 4.499-3.213 10.471-9.095 10.512-9.14a32.545 32.545 0 0 0 4.583-6.366c3.182-5.784 1.073-13.053-4.711-16.235z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Paintbrush;\r\n","import React from \"react\";\r\nimport styles from \"./IconEditor.module.scss\";\r\nimport Icon from \"../../../../components/Icon/Icon\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport Paintbrush from \"../Paintbrush\";\r\nimport { hex } from \"color-convert\";\r\n\r\nconst IconEditor = ({ iconInfo, updateIconInfo, player, flipped }) => {\r\n  const { [`${player}Icon`]: icon, [`${player}IconColour`]: colour } = iconInfo;\r\n  const bgColour = getBgColour(colour);\r\n  const userBackface = flipped && player === \"user\";\r\n  const compBackface = !flipped && player === \"comp\";\r\n  return (\r\n    <Card className={styles.iconEditor}>\r\n      <div className={styles.canvas} style={{ backgroundColor: bgColour }}>\r\n        <div className={styles.canvasInner}>\r\n          <Icon icon={icon} colour={colour} />\r\n        </div>\r\n      </div>\r\n      <div className={styles.palette}>\r\n        <input\r\n          type=\"color\"\r\n          aria-label=\"palette\"\r\n          onChange={e => updateIconInfo(e.target.value)}\r\n          value={colour}\r\n          tabIndex={!userBackface && !compBackface ? \"0\" : \"-1\"}\r\n        />\r\n        <i className={styles.paintIcon}>\r\n          <Paintbrush className={styles.paintImg} colour={bgColour} />\r\n        </i>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst getBgColour = colour => {\r\n  const colourBrightness = hex.hsl(`${colour.slice(1)}`)[2];\r\n  return colourBrightness < 95 ? \"#fff\" : \"#f9ab55\";\r\n};\r\n\r\nexport default IconEditor;\r\n","import React from \"react\";\r\nimport styles from \"./IconShowcase.module.scss\";\r\nimport IconButton from \"../../../../components/IconButton/IconButton\";\r\n\r\nconst IconShowcase = ({\r\n  oppositionIconType,\r\n  updateIconInfo,\r\n  player,\r\n  flipped\r\n}) => {\r\n  const isPlayer1 = player === \"user\";\r\n  const isPlayer2 = player === \"comp\";\r\n  const isUserBackface = flipped && isPlayer1;\r\n  const isCompBackface = !flipped && isPlayer2;\r\n  return (\r\n    <div className={styles.iconShowcase}>\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"circle\"\r\n        iconType=\"nought\"\r\n        colour=\"green\"\r\n        disabled={oppositionIconType === \"nought\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"smiley\"\r\n        colour=\"yellow\"\r\n        iconType=\"nought\"\r\n        disabled={oppositionIconType === \"nought\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"wheel\"\r\n        iconType=\"nought\"\r\n        disabled={oppositionIconType === \"nought\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n        colour=\"orange\"\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"button\"\r\n        iconType=\"nought\"\r\n        disabled={oppositionIconType === \"nought\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n        colour=\"lightBlue\"\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"cross\"\r\n        colour=\"red\"\r\n        iconType=\"cross\"\r\n        disabled={oppositionIconType === \"cross\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"swords\"\r\n        colour=\"brown\"\r\n        iconType=\"cross\"\r\n        disabled={oppositionIconType === \"cross\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"candyCane\"\r\n        colour=\"red\"\r\n        iconType=\"cross\"\r\n        disabled={oppositionIconType === \"cross\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n      />\r\n      <IconShowcaseBtn\r\n        updateIconInfo={updateIconInfo}\r\n        icon=\"pencils\"\r\n        iconType=\"cross\"\r\n        colour=\"gold\"\r\n        disabled={oppositionIconType === \"cross\" && isPlayer2}\r\n        tabIndex={!isUserBackface && !isCompBackface ? \"0\" : \"-1\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst IconShowcaseBtn = ({\r\n  icon,\r\n  iconType,\r\n  colour,\r\n  updateIconInfo,\r\n  disabled,\r\n  tabIndex\r\n}) => {\r\n  const className = !disabled\r\n    ? styles.iconShowcaseBtn\r\n    : styles.iconShowcaseBtnDisabled;\r\n  return (\r\n    <IconButton\r\n      className={className}\r\n      onClick={() => updateIconInfo(icon, iconType)}\r\n      disabled={disabled}\r\n      icon={icon}\r\n      colour={colour}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IconShowcase;\r\n","import React from \"react\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styles from \"./IconSelectNav.module.scss\";\r\n\r\nconst IconSelectNav = ({ player, iconInfo, iconSelectFuncs }) => {\r\n  const { changeRoute, toggleIconSelectFlipped } = iconSelectFuncs;\r\n  const compOnClick = () => {\r\n    changeRoute(\"game\");\r\n    toggleIconSelectFlipped();\r\n  };\r\n  return (\r\n    <div className={styles.buttonRow}>\r\n      {player === \"comp\" && (\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={toggleIconSelectFlipped}\r\n          className={styles.backButton}\r\n          variant=\"contained\"\r\n        >\r\n          <ArrowBack className={styles.arrow} />\r\n        </Button>\r\n      )}\r\n      <Button\r\n        color=\"primary\"\r\n        disabled={player === \"comp\" && !iconInfo.compIcon}\r\n        className={styles[`${player}ConfirmButton`]}\r\n        onClick={player === \"user\" ? toggleIconSelectFlipped : compOnClick}\r\n        variant=\"contained\"\r\n      >\r\n        {`CONFIRM ${player.toUpperCase()} ICON`}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconSelectNav;\r\n","import React from \"react\";\r\nimport styles from \"./IconSelect.module.scss\";\r\nimport IconEditor from \"./IconEditor/IconEditor\";\r\nimport IconShowcase from \"./IconShowcase/IconShowcase\";\r\nimport IconSelectNav from \"./IconSelectNav/IconSelectNav\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst jsStyles = {\r\n  typography: {\r\n    display: \"flex\",\r\n    fontSize: \"calc(19px + 5 * ((100vw - 320px) / 280))\",\r\n    \"@media (orientation: landscape) and (min-width: 600px)\": {\r\n      fontSize: \"35px\"\r\n    }\r\n  }\r\n};\r\n\r\nconst IconSelect = ({\r\n  classes,\r\n  player,\r\n  iconInfo,\r\n  flipped,\r\n  iconSelectFuncs,\r\n  gameMode\r\n}) => {\r\n  const otherPlayer = player === \"user\" ? \"comp\" : \"user\";\r\n  const { updateIconInfo } = iconSelectFuncs;\r\n  const eitherCompOrPlayer2 = gameMode === \"pvp\" ? \"PLAYER 2\" : \"COMP\";\r\n  const eitherPlayerOrPlayer1 = gameMode === \"pvp\" ? \"PLAYER 1\" : \"PLAYER\";\r\n  const selectedPlayer =\r\n    player === \"user\" ? eitherPlayerOrPlayer1 : eitherCompOrPlayer2;\r\n  return (\r\n    <div className={styles.iconSelectWrapper}>\r\n      <div className={styles.iconSelect}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          classes={{ root: classes.typography }}\r\n          className={styles.heading}\r\n        >\r\n          SELECT&nbsp;\r\n          <span className={styles.highlight}>{selectedPlayer}</span>\r\n          &nbsp;ICON\r\n        </Typography>\r\n        <IconEditor\r\n          player={player}\r\n          flipped={flipped}\r\n          updateIconInfo={newColour =>\r\n            updateIconInfo(player, { iconColour: newColour })\r\n          }\r\n          iconInfo={iconInfo}\r\n        />\r\n        <IconShowcase\r\n          player={player}\r\n          flipped={flipped}\r\n          oppositionIconType={iconInfo[`${otherPlayer}IconType`]}\r\n          updateIconInfo={(newIcon, newIconType) =>\r\n            updateIconInfo(player, {\r\n              icon: newIcon,\r\n              iconType: newIconType\r\n            })\r\n          }\r\n        />\r\n        <IconSelectNav\r\n          player={player}\r\n          iconInfo={iconInfo}\r\n          iconSelectFuncs={iconSelectFuncs}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(jsStyles)(IconSelect);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleIconSelectFlipped, updateIconInfo } from \"../../actions\";\r\nimport Flipper from \"./Flipper/Flipper\";\r\nimport IconSelect from \"./IconSelect/IconSelect\";\r\n\r\nconst mapPropsToState = state => ({\r\n  iconSelectFlipped: state.iconSelectFlippedToggleReducer.iconSelectFlipped,\r\n  iconInfo: state.iconInfoReducer,\r\n  gameMode: state.gameStateReducer.gameMode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleIconSelectFlipped: () => dispatch(toggleIconSelectFlipped()),\r\n  updateIconInfo: (player, iconChangesObj) =>\r\n    dispatch(updateIconInfo(player, iconChangesObj))\r\n});\r\n\r\nconst IconSelectScreen = ({\r\n  iconInfo,\r\n  iconSelectFlipped,\r\n  gameMode,\r\n  updateIconInfo,\r\n  toggleIconSelectFlipped,\r\n  changeRoute\r\n}) => {\r\n  const iconSelectFuncs = {\r\n    changeRoute,\r\n    toggleIconSelectFlipped,\r\n    updateIconInfo\r\n  };\r\n  return (\r\n    <Flipper\r\n      style={{\r\n        height: \"100%\"\r\n      }}\r\n      flipped={iconSelectFlipped}\r\n      front={\r\n        <IconSelect\r\n          player=\"user\"\r\n          iconInfo={iconInfo}\r\n          flipped={iconSelectFlipped}\r\n          iconSelectFuncs={iconSelectFuncs}\r\n          gameMode={gameMode}\r\n        />\r\n      }\r\n      back={\r\n        <IconSelect\r\n          player=\"comp\"\r\n          iconInfo={iconInfo}\r\n          flipped={iconSelectFlipped}\r\n          iconSelectFuncs={iconSelectFuncs}\r\n          gameMode={gameMode}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapPropsToState,\r\n  mapDispatchToProps\r\n)(IconSelectScreen);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    appBar: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      position: \"absolute\"\r\n    }\r\n  };\r\n};\r\n\r\nfunction SimpleAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <AppBar color=\"primary\" position=\"static\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Settings\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  formControl: {\r\n    margin: theme.spacing.unit * 2,\r\n    width: `calc(100% - ${theme.spacing.unit * 6}px)`\r\n  },\r\n  group: {\r\n    margin: `${theme.spacing.unit}px 0`,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\"\r\n  }\r\n});\r\n\r\nconst RadioButtonsGroupRow = ({\r\n  classes,\r\n  fieldSetPublic,\r\n  fieldSetPrivate,\r\n  currentFieldSetValue,\r\n  formControlLabelInfo,\r\n  handleChange\r\n}) => {\r\n  return (\r\n    <FormControl component=\"fieldset\" className={classes.formControl}>\r\n      <FormLabel\r\n        classes={{ root: classes.root, focused: classes.focused }}\r\n        component=\"legend\"\r\n      >\r\n        {fieldSetPublic}\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-label={fieldSetPublic}\r\n        name={fieldSetPrivate}\r\n        className={classes.group}\r\n        value={currentFieldSetValue}\r\n        onChange={handleChange(fieldSetPrivate)}\r\n      >\r\n        {formControlLabelInfo.map(labelInfo => {\r\n          const { value, label } = labelInfo;\r\n          return (\r\n            <FormControlLabel\r\n              value={value}\r\n              control={<Radio />}\r\n              label={label}\r\n              key={value}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nRadioButtonsGroupRow.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  fieldSetPublic: PropTypes.string.isRequired,\r\n  fieldSetPrivate: PropTypes.string.isRequired,\r\n  currentFieldSetValue: PropTypes.string.isRequired,\r\n  formControlLabelInfo: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles)(RadioButtonsGroupRow);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { restartGame, restartGameThenCompMove } from \"../../../actions\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport RadioButtonsGroupRow from \"./RadioButtonsGroupRow\";\r\n\r\nconst styles = theme => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  button: {\r\n    alignSelf: \"center\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    margin: `0 0 ${theme.spacing.unit * 2}px`,\r\n    display: \"inline-block\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.secondary.light\r\n    }\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  const { gridSize, firstMove, gameMode } = state.gameStateReducer;\r\n  return { gridSize, firstMove, gameMode };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restartGame: (gridSize, firstMove, gameMode) =>\r\n    dispatch(restartGame(gridSize, firstMove, gameMode)),\r\n  restartGameThenCompMove: (gridSize, firstMove) =>\r\n    dispatch(restartGameThenCompMove(gridSize, firstMove))\r\n});\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    gridSize: null,\r\n    firstMove: null,\r\n    gameMode: null\r\n  };\r\n\r\n  handleChange = fieldName => event => {\r\n    this.setState({ [fieldName]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const gridSize = this.getData(\"gridSize\");\r\n    const firstMove = this.getData(\"firstMove\");\r\n    const gameMode = this.getData(\"gameMode\");\r\n    this.restartGame(gridSize, firstMove, gameMode);\r\n    this.props.changeRoute(\"game\");\r\n  };\r\n\r\n  restartGame = (gridSize, firstMove, gameMode) => {\r\n    if (firstMove === \"user\" || gameMode === \"pvp\") {\r\n      return this.props.restartGame(gridSize, firstMove, gameMode);\r\n    } else {\r\n      return this.props.restartGameThenCompMove(gridSize, firstMove);\r\n    }\r\n  };\r\n\r\n  getData = dataType => {\r\n    return this.state[dataType] || String(this.props[dataType]);\r\n  };\r\n\r\n  render() {\r\n    const { classes, className } = this.props;\r\n    const formClassName = `${classes.form} ${className}`;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={formClassName}>\r\n        <RadioButtonsGroupRow\r\n          fieldSetPublic={\"Grid Size\"}\r\n          fieldSetPrivate={\"gridSize\"}\r\n          currentFieldSetValue={this.getData(\"gridSize\")}\r\n          formControlLabelInfo={[\r\n            { value: \"3\", label: \"3 x 3\" },\r\n            { value: \"5\", label: \"5 x 5\" },\r\n            { value: \"7\", label: \"7 x 7\" }\r\n          ]}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <RadioButtonsGroupRow\r\n          fieldSetPublic={\"Game Type\"}\r\n          fieldSetPrivate={\"gameMode\"}\r\n          currentFieldSetValue={this.getData(\"gameMode\")}\r\n          formControlLabelInfo={[\r\n            { value: \"vsComp\", label: \"VS Comp\" },\r\n            { value: \"pvp\", label: \"Local 2 Player\" }\r\n          ]}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <RadioButtonsGroupRow\r\n          fieldSetPublic={\"First Move Player\"}\r\n          fieldSetPrivate={\"firstMove\"}\r\n          currentFieldSetValue={this.getData(\"firstMove\")}\r\n          formControlLabelInfo={\r\n            this.state.gameMode === \"pvp\"\r\n              ? [\r\n                  { value: \"user\", label: \"Player 1\" },\r\n                  { value: \"comp\", label: \"Player 2\" }\r\n                ]\r\n              : [\r\n                  { value: \"user\", label: \"User\" },\r\n                  { value: \"comp\", label: \"Comp\" }\r\n                ]\r\n          }\r\n          handleChange={this.handleChange}\r\n        />\r\n        <Button className={classes.button} type=\"submit\" variant=\"contained\">\r\n          Apply Settings\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Form)\r\n);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { unstable_useMediaQuery as useMediaQuery } from \"@material-ui/core/useMediaQuery\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport AppBar from \"./AppBar/AppBar\";\r\nimport Form from \"./Form/Form\";\r\n\r\nconst styles = {\r\n  root: {\r\n    height: \"100%\"\r\n  },\r\n  grid: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    height: \"calc(100% - 50px)\"\r\n  },\r\n  formMobile: {\r\n    position: \"relative\",\r\n    top: \"70px\"\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: \"680px\",\r\n    margin: \"50px auto\"\r\n  }\r\n};\r\n\r\nconst Settings = ({ classes, changeRoute }) => {\r\n  const query700px = useMediaQuery(\"(min-width:700px)\");\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar />\r\n      {query700px && (\r\n        <Grid\r\n          className={classes.grid}\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Card className={classes.card}>\r\n            <Form changeRoute={changeRoute} />\r\n          </Card>\r\n        </Grid>\r\n      )}\r\n      {!query700px && (\r\n        <Form changeRoute={changeRoute} className={classes.formMobile} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Settings);\r\n","import React, { Component } from \"react\";\r\nimport GameModeSelect from \"../routes/GameModeSelect/GameModeSelect\";\r\nimport Game from \"../routes/Game/Game\";\r\nimport IconSelectScreen from \"../routes/IconSelectScreen/IconSelectScreen\";\r\nimport Settings from \"../routes/Settings/Settings\";\r\n\r\nimport styles from \"./TictactoeApp.module.scss\";\r\n\r\nclass TictactoeApp extends Component {\r\n  state = {\r\n    route: \"gameModeSelect\"\r\n  };\r\n\r\n  changeRoute = route => {\r\n    this.setState({ route });\r\n  };\r\n\r\n  render() {\r\n    const { route } = this.state;\r\n    return (\r\n      <div className={styles.app}>\r\n        <div className={styles.appBody}>\r\n          {route === \"gameModeSelect\" && (\r\n            <GameModeSelect changeRoute={this.changeRoute} />\r\n          )}\r\n          {route === \"iconSelect\" && (\r\n            <IconSelectScreen changeRoute={this.changeRoute} />\r\n          )}\r\n          {route === \"game\" && <Game changeRoute={this.changeRoute} />}\r\n          {route === \"settings\" && <Settings changeRoute={this.changeRoute} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TictactoeApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport {\r\n  gameStateReducer,\r\n  iconSelectFlippedToggleReducer,\r\n  iconInfoReducer\r\n} from \"./reducers\";\r\nimport \"./index.scss\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport TictactoeApp from \"./TictactoeApp/TictactoeApp\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#48ae7e\",\r\n      main: \"#7be0ad\",\r\n      dark: \"#aeffdf\",\r\n      contrastText: \"#000\"\r\n    },\r\n    secondary: {\r\n      light: \"#c27c26\",\r\n      main: \"#f9ab55\",\r\n      dark: \"#ffdd84\",\r\n      contrastText: \"#000\"\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\"BioRhyme\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\r\n      \",\"\r\n    ),\r\n    fontSize: 13.99\r\n  },\r\n  overrides: {\r\n    MuiFormLabel: {\r\n      root: {\r\n        \"&$focused\": {\r\n          color: \"#c27c26\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst reducers = combineReducers({\r\n  gameStateReducer,\r\n  iconSelectFlippedToggleReducer,\r\n  iconInfoReducer\r\n});\r\n\r\nconst logger = createLogger();\r\nconst store = createStore(reducers, applyMiddleware(thunk, logger));\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <TictactoeApp />\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconShowcase\":\"IconShowcase_iconShowcase__CLCws\",\"iconShowcaseBtn\":\"IconShowcase_iconShowcaseBtn__KcdKj\",\"iconShowcaseBtnDisabled\":\"IconShowcase_iconShowcaseBtnDisabled__L8I7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__26XPL\",\"grid-3\":\"Grid_grid-3__2rnX7\",\"grid-5\":\"Grid_grid-5__2gpQd\",\"grid-7\":\"Grid_grid-7__1FjyI\",\"outcome\":\"Grid_outcome__2ZW01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1r8sA\",\"button\":\"Controls_button__2LcPm\",\"settingsBtn\":\"Controls_settingsBtn__2k9Ii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"Game_gameScreen__3abbq\",\"gameScreenWrapper\":\"Game_gameScreenWrapper__25juF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"TictactoeApp_app__3zH1T\",\"appBody\":\"TictactoeApp_appBody__1yuRk\",\"reactCSSTransitionGroup\":\"TictactoeApp_reactCSSTransitionGroup__3dqJJ\",\"heading\":\"TictactoeApp_heading__2wyaE\"};"],"sourceRoot":""}